#!/bin/sh
#
# pxf-instance	start/stop/initialize the PXF instance
#

pxf_user=pxf
pxf_root=/usr/lib/gphd/pxf

instance_root=/var/gphd/pxf
instance_name=pxf-service
instance_template=bio
instance_port=51200
instance_owner=pxf:pxf

tcserver_root=/opt/vmware/vfabric-tc-server-standard

function createInstance()
{
	create_options="\
	--template $instance_template \
	--property ${instance_template}.http.port=$instance_port \
	--instance-directory $instance_root"

	mkdir -p $instance_root
	$tcserver_root/tcruntime-instance.sh create $create_options $instance_name

	if [ $? -gt 0 ]; then
		echo instance creation failed
		return 1
	fi

	chown $instance_owner -R $instance_root
}

function configureInstance()
{
	serverXml=$instance_root/$instance_name/conf/server.xml
	cat $serverXml | \
	sed "/^[[:blank:]]*maxKeepAliveRequests=.*$/ a\\
	maxHeaderCount=\"10000\"\\
	maxHttpHeaderSize=\"65536\"
	" > ${serverXml}.tmp

	rm $serverXml
	mv ${serverXml}.tmp $serverXml
}

function deployWebapp()
{
    cp $pxf_root/pxf.war $instance_root/$instance_name/webapps/
    cp $pxf_root/pxf-service-*[0-9].jar $instance_root/$instance_name/lib/
}

function doInit()
{
	if [ -d $instance_root ]; then 
		echo instance already exists in $instance_root, existing...
		return 1
	fi

	createInstance || return 1
	configureInstance || return 1
	deployWebapp || return 1
}

function doStartStop()
{
	command=$1
	pushd $instance_root
	runuser $pxf_user -c "$tcserver_root/tcruntime-ctl.sh $instance_name $command -n $instance_root -d $tcserver_root"
	popd
}

command=$1

case "$command" in
	"init" )
		doInit
		;;
	"start" )
		doStartStop $command
		;;
	"stop" )
		doStartStop $command
		;;
	"restart" )
		doStartStop stop
		sleep 1s
		doStartStop start
		;;
	* )
		echo $"Usage: $0 {start|stop|restart|init}"
		exit 2
		;;
esac

exit $?
