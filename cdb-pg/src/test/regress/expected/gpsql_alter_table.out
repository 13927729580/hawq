-- AO
CREATE TABLE altable(a int, b text, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO altable SELECT i, i::text, i FROM generate_series(1, 10)i;
ALTER TABLE altable ADD COLUMN x int;
ERROR:  ADD COLUMN with no default value in append-only tables is not yet supported.
ALTER TABLE altable ADD COLUMN x int DEFAULT 1;
SELECT a, b, c, x FROM altable;
 a  | b  | c  | x 
----+----+----+---
  8 | 8  |  8 | 1
  9 | 9  |  9 | 1
 10 | 10 | 10 | 1
  1 | 1  |  1 | 1
  2 | 2  |  2 | 1
  3 | 3  |  3 | 1
  4 | 4  |  4 | 1
  5 | 5  |  5 | 1
  6 | 6  |  6 | 1
  7 | 7  |  7 | 1
(10 rows)

ALTER TABLE altable ALTER COLUMN c SET DEFAULT 10 - 1;
INSERT INTO altable(a, b) VALUES(11, '11');
SELECT a, b, c FROM altable WHERE a = 11;
 a  | b  | c 
----+----+---
 11 | 11 | 9
(1 row)

ALTER TABLE altable ALTER COLUMN c DROP DEFAULT;
BEGIN;
INSERT INTO altable(a, b) VALUES(12, '12');
SELECT a, b, c FROM altable WHERE a = 12;
 a  | b  | c 
----+----+---
 12 | 12 |  
(1 row)

ROLLBACK;
ALTER TABLE altable ALTER COLUMN c SET NOT NULL;
INSERT INTO altable(a, b) VALUES(13, '13');
ERROR:  NULL value in column "c" violates not-null constraint (COptTasks.cpp:1268)
ALTER TABLE altable ALTER COLUMN c DROP NOT NULL;
INSERT INTO altable(a, b) VALUES(13, '13');
SELECT a, b, c FROM altable WHERE a = 13;
 a  | b  | c 
----+----+---
 13 | 13 |  
(1 row)

ALTER TABLE altable ALTER COLUMN c SET STATISTICS 100;
ALTER TABLE altable ALTER COLUMN b SET STORAGE PLAIN;
ALTER TABLE altable DROP COLUMN b;
SELECT a, c FROM altable;
 a  | c  
----+----
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  1 |  1
  2 |  2
 13 |   
  8 |  8
  9 |  9
 10 | 10
 11 |  9
(12 rows)

ALTER TABLE altable ADD CONSTRAINT c_check CHECK (c < 10);
ERROR:  check constraint "c_check" is violated by some row  (seg2 vm41.rel:52013 pid=14593)
ALTER TABLE altable ADD CONSTRAINT c_check CHECK (c > 0);
INSERT INTO altable(a, c) VALUES(0, -10);
ERROR:  Check constraint for table altable violated
ALTER TABLE altable DROP CONSTRAINT c_check;
INSERT INTO altable(a, c) VALUES(0, -10);
ALTER TABLE altable ALTER COLUMN c TYPE bigint;
CREATE USER alt_user;
NOTICE:  resource queue required -- using default resource queue "pg_default"
CREATE TABLE altable_owner(a, b) AS VALUES(1, 10),(2,20);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE altable_owner OWNER to alt_user;
SET ROLE alt_user;
SELECT a, b FROM altable_owner;
 a | b  
---+----
 1 | 10
 2 | 20
(2 rows)

RESET ROLE;
DROP TABLE altable_owner;
DROP USER alt_user;
ALTER TABLE altable CLUSTER ON some_index;
ERROR:  ALTER TABLE ... CLUSTER is not supported
ALTER TABLE altable SET WITHOUT OIDS;
ALTER TABLE altable SET TABLESPACE pg_default;
ERROR:  ALTER TABLE ... SET TABLESPACE is not supported
ALTER TABLE altable SET (fillfactor = 90);
ERROR:  altering reloptions for append only tables is not permitted
ALTER TABLE altable SET DISTRIBUTED BY c;
ERROR:  syntax error at or near "c"
LINE 1: ALTER TABLE altable SET DISTRIBUTED BY c;
                                               ^
ALTER TABLE altable ENABLE TRIGGER ALL;
ERROR:  ALTER TABLE ... ENABLE TRIGGER is not supported
ALTER TABLE altable DISABLE TRIGGER ALL;
ERROR:  ALTER TABLE ... DISABLE TRIGGER is not supported
-- CO
CREATE TABLE altablec(a int, b text, c int) WITH (appendonly=true, orientation=column);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO altablec SELECT i, i::text, i FROM generate_series(1, 10)i;
ALTER TABLE altablec ADD COLUMN x int;
ERROR:  ADD COLUMN with no default value in append-only tables is not yet supported.
ALTER TABLE altablec ADD COLUMN x int DEFAULT 1;
SELECT a, b, c, x FROM altablec;
 a  | b  | c  | x 
----+----+----+---
  1 | 1  |  1 | 1
  2 | 2  |  2 | 1
  8 | 8  |  8 | 1
  9 | 9  |  9 | 1
 10 | 10 | 10 | 1
  3 | 3  |  3 | 1
  4 | 4  |  4 | 1
  5 | 5  |  5 | 1
  6 | 6  |  6 | 1
  7 | 7  |  7 | 1
(10 rows)

ALTER TABLE altablec ALTER COLUMN c SET DEFAULT 10 - 1;
INSERT INTO altablec(a, b) VALUES(11, '11');
SELECT a, b, c FROM altablec WHERE a = 11;
 a  | b  | c 
----+----+---
 11 | 11 | 9
(1 row)

ALTER TABLE altablec ALTER COLUMN c DROP DEFAULT;
BEGIN;
INSERT INTO altablec(a, b) VALUES(12, '12');
SELECT a, b, c FROM altablec WHERE a = 12;
 a  | b  | c 
----+----+---
 12 | 12 |  
(1 row)

ROLLBACK;
ALTER TABLE altablec ALTER COLUMN c SET NOT NULL;
INSERT INTO altablec(a, b) VALUES(13, '13');
ERROR:  NULL value in column "c" violates not-null constraint (COptTasks.cpp:1268)
ALTER TABLE altablec ALTER COLUMN c DROP NOT NULL;
INSERT INTO altablec(a, b) VALUES(13, '13');
SELECT a, b, c FROM altablec WHERE a = 13;
 a  | b  | c 
----+----+---
 13 | 13 |  
(1 row)

ALTER TABLE altablec ALTER COLUMN c SET STATISTICS 100;
ALTER TABLE altablec ALTER COLUMN b SET STORAGE PLAIN;
ALTER TABLE altablec DROP COLUMN b;
SELECT a, c FROM altablec;
 a  | c  
----+----
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  1 |  1
  2 |  2
 13 |   
  8 |  8
  9 |  9
 10 | 10
 11 |  9
(12 rows)

ALTER TABLE altablec ADD CONSTRAINT c_check CHECK (c < 10);
ERROR:  check constraint "c_check" is violated  (seg2 vm41.rel:52013 pid=14593)
ALTER TABLE altablec ADD CONSTRAINT c_check CHECK (c > 0);
INSERT INTO altablec(a, c) VALUES(0, -10);
ERROR:  Check constraint for table altablec violated
ALTER TABLE altablec DROP CONSTRAINT c_check;
INSERT INTO altablec(a, c) VALUES(0, -10);
ALTER TABLE altablec ALTER COLUMN c TYPE bigint;
CREATE TABLE palt(a int, b text, c int)
PARTITION BY RANGE(c)
(START (1) END (100) EVERY (10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "palt_1_prt_1" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_2" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_3" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_4" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_5" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_6" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_7" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_8" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_9" for table "palt"
NOTICE:  CREATE TABLE will create partition "palt_1_prt_10" for table "palt"
INSERT INTO palt SELECT i, i::text, i FROM generate_series(1, 99)i;
CREATE TABLE palt_child(a int, b text, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE palt EXCHANGE PARTITION FOR (51) WITH TABLE palt_child;
ALTER TABLE palt ADD PARTITION START (100) END (110);
NOTICE:  CREATE TABLE will create partition "palt_1_prt_r718083176" for table "palt"
INSERT INTO palt VALUES(100, '100', 100);
SELECT count(*) FROM palt;
 count 
-------
    90
(1 row)

ALTER TABLE palt RENAME PARTITION FOR (100) TO part100;
ALTER TABLE palt DROP PARTITION FOR (100);
NOTICE:  dropped partition "part100" for relation "palt"
INSERT INTO palt VALUES(100, '100', 100);
ERROR:  no partition for partitioning key  (seg2 vm41.rel:52013 pid=14593)
SELECT count(*) FROM palt;
 count 
-------
    89
(1 row)

ALTER TABLE palt TRUNCATE PARTITION FOR (41);
SELECT count(*) FROM palt;
 count 
-------
    79
(1 row)

ALTER TABLE palt ADD COLUMN x text DEFAULT 'default';
SELECT count(*) FROM palt;
 count 
-------
    79
(1 row)

