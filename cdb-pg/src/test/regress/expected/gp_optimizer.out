--
-- ORCA tests
--
-- show version
SELECT gp_opt_version();
                           gp_opt_version
--------------------------------------------------------------------
 GPOPT version: 1.283, GPOS version: 1.90, Xerces version: 3.1.1-p1
(1 row)

-- master only tables
create schema orca;
create table orca.r();
NOTICE:  Table has no attributes to distribute on.
alter table orca.r add column a int;
alter table orca.r add column b int;
insert into orca.r select i, i/3 from generate_series(1,20) i;
create table orca.s();
NOTICE:  Table has no attributes to distribute on.
alter table orca.s add column c int;
alter table orca.s add column d int;
insert into orca.s select i, i/2 from generate_series(1,30) i;
set optimizer_log=on;
set optimizer=on;
----------------------------------------------------------------------
-- expected fall back to the planner
select sum(distinct a), count(distinct b) from orca.r;
 sum | count
-----+-------
 210 |     7
(1 row)

select * from orca.r;
 a  | b 
----+---
  1 | 0
  2 | 0
  3 | 1
  4 | 1
  5 | 1
  6 | 2
  7 | 2
  8 | 2
  9 | 3
 10 | 3
 11 | 3
 12 | 4
 13 | 4
 14 | 4
 15 | 5
 16 | 5
 17 | 5
 18 | 6
 19 | 6
 20 | 6
(20 rows)

select * from orca.r, orca.s where r.a=s.c;
 a  | b | c  | d  
----+---+----+----
  1 | 0 |  1 |  0
  2 | 0 |  2 |  1
  3 | 1 |  3 |  1
  4 | 1 |  4 |  2
  5 | 1 |  5 |  2
  6 | 2 |  6 |  3
  7 | 2 |  7 |  3
  8 | 2 |  8 |  4
  9 | 3 |  9 |  4
 10 | 3 | 10 |  5
 11 | 3 | 11 |  5
 12 | 4 | 12 |  6
 13 | 4 | 13 |  6
 14 | 4 | 14 |  7
 15 | 5 | 15 |  7
 16 | 5 | 16 |  8
 17 | 5 | 17 |  8
 18 | 6 | 18 |  9
 19 | 6 | 19 |  9
 20 | 6 | 20 | 10
(20 rows)

select * from orca.r, orca.s where r.a<s.c+1 or r.a>s.c;
 a  | b | c  | d  
----+---+----+----
  1 | 0 |  1 |  0
  2 | 0 |  1 |  0
  3 | 1 |  1 |  0
  4 | 1 |  1 |  0
  5 | 1 |  1 |  0
  6 | 2 |  1 |  0
  7 | 2 |  1 |  0
  8 | 2 |  1 |  0
  9 | 3 |  1 |  0
 10 | 3 |  1 |  0
 11 | 3 |  1 |  0
 12 | 4 |  1 |  0
 13 | 4 |  1 |  0
 14 | 4 |  1 |  0
 15 | 5 |  1 |  0
 16 | 5 |  1 |  0
 17 | 5 |  1 |  0
 18 | 6 |  1 |  0
 19 | 6 |  1 |  0
 20 | 6 |  1 |  0
  1 | 0 |  2 |  1
  2 | 0 |  2 |  1
  3 | 1 |  2 |  1
  4 | 1 |  2 |  1
  5 | 1 |  2 |  1
  6 | 2 |  2 |  1
  7 | 2 |  2 |  1
  8 | 2 |  2 |  1
  9 | 3 |  2 |  1
 10 | 3 |  2 |  1
 11 | 3 |  2 |  1
 12 | 4 |  2 |  1
 13 | 4 |  2 |  1
 14 | 4 |  2 |  1
 15 | 5 |  2 |  1
 16 | 5 |  2 |  1
 17 | 5 |  2 |  1
 18 | 6 |  2 |  1
 19 | 6 |  2 |  1
 20 | 6 |  2 |  1
  1 | 0 |  3 |  1
  2 | 0 |  3 |  1
  3 | 1 |  3 |  1
  4 | 1 |  3 |  1
  5 | 1 |  3 |  1
  6 | 2 |  3 |  1
  7 | 2 |  3 |  1
  8 | 2 |  3 |  1
  9 | 3 |  3 |  1
 10 | 3 |  3 |  1
 11 | 3 |  3 |  1
 12 | 4 |  3 |  1
 13 | 4 |  3 |  1
 14 | 4 |  3 |  1
 15 | 5 |  3 |  1
 16 | 5 |  3 |  1
 17 | 5 |  3 |  1
 18 | 6 |  3 |  1
 19 | 6 |  3 |  1
 20 | 6 |  3 |  1
  1 | 0 |  4 |  2
  2 | 0 |  4 |  2
  3 | 1 |  4 |  2
  4 | 1 |  4 |  2
  5 | 1 |  4 |  2
  6 | 2 |  4 |  2
  7 | 2 |  4 |  2
  8 | 2 |  4 |  2
  9 | 3 |  4 |  2
 10 | 3 |  4 |  2
 11 | 3 |  4 |  2
 12 | 4 |  4 |  2
 13 | 4 |  4 |  2
 14 | 4 |  4 |  2
 15 | 5 |  4 |  2
 16 | 5 |  4 |  2
 17 | 5 |  4 |  2
 18 | 6 |  4 |  2
 19 | 6 |  4 |  2
 20 | 6 |  4 |  2
  1 | 0 |  5 |  2
  2 | 0 |  5 |  2
  3 | 1 |  5 |  2
  4 | 1 |  5 |  2
  5 | 1 |  5 |  2
  6 | 2 |  5 |  2
  7 | 2 |  5 |  2
  8 | 2 |  5 |  2
  9 | 3 |  5 |  2
 10 | 3 |  5 |  2
 11 | 3 |  5 |  2
 12 | 4 |  5 |  2
 13 | 4 |  5 |  2
 14 | 4 |  5 |  2
 15 | 5 |  5 |  2
 16 | 5 |  5 |  2
 17 | 5 |  5 |  2
 18 | 6 |  5 |  2
 19 | 6 |  5 |  2
 20 | 6 |  5 |  2
  1 | 0 |  6 |  3
  2 | 0 |  6 |  3
  3 | 1 |  6 |  3
  4 | 1 |  6 |  3
  5 | 1 |  6 |  3
  6 | 2 |  6 |  3
  7 | 2 |  6 |  3
  8 | 2 |  6 |  3
  9 | 3 |  6 |  3
 10 | 3 |  6 |  3
 11 | 3 |  6 |  3
 12 | 4 |  6 |  3
 13 | 4 |  6 |  3
 14 | 4 |  6 |  3
 15 | 5 |  6 |  3
 16 | 5 |  6 |  3
 17 | 5 |  6 |  3
 18 | 6 |  6 |  3
 19 | 6 |  6 |  3
 20 | 6 |  6 |  3
  1 | 0 |  7 |  3
  2 | 0 |  7 |  3
  3 | 1 |  7 |  3
  4 | 1 |  7 |  3
  5 | 1 |  7 |  3
  6 | 2 |  7 |  3
  7 | 2 |  7 |  3
  8 | 2 |  7 |  3
  9 | 3 |  7 |  3
 10 | 3 |  7 |  3
 11 | 3 |  7 |  3
 12 | 4 |  7 |  3
 13 | 4 |  7 |  3
 14 | 4 |  7 |  3
 15 | 5 |  7 |  3
 16 | 5 |  7 |  3
 17 | 5 |  7 |  3
 18 | 6 |  7 |  3
 19 | 6 |  7 |  3
 20 | 6 |  7 |  3
  1 | 0 |  8 |  4
  2 | 0 |  8 |  4
  3 | 1 |  8 |  4
  4 | 1 |  8 |  4
  5 | 1 |  8 |  4
  6 | 2 |  8 |  4
  7 | 2 |  8 |  4
  8 | 2 |  8 |  4
  9 | 3 |  8 |  4
 10 | 3 |  8 |  4
 11 | 3 |  8 |  4
 12 | 4 |  8 |  4
 13 | 4 |  8 |  4
 14 | 4 |  8 |  4
 15 | 5 |  8 |  4
 16 | 5 |  8 |  4
 17 | 5 |  8 |  4
 18 | 6 |  8 |  4
 19 | 6 |  8 |  4
 20 | 6 |  8 |  4
  1 | 0 |  9 |  4
  2 | 0 |  9 |  4
  3 | 1 |  9 |  4
  4 | 1 |  9 |  4
  5 | 1 |  9 |  4
  6 | 2 |  9 |  4
  7 | 2 |  9 |  4
  8 | 2 |  9 |  4
  9 | 3 |  9 |  4
 10 | 3 |  9 |  4
 11 | 3 |  9 |  4
 12 | 4 |  9 |  4
 13 | 4 |  9 |  4
 14 | 4 |  9 |  4
 15 | 5 |  9 |  4
 16 | 5 |  9 |  4
 17 | 5 |  9 |  4
 18 | 6 |  9 |  4
 19 | 6 |  9 |  4
 20 | 6 |  9 |  4
  1 | 0 | 10 |  5
  2 | 0 | 10 |  5
  3 | 1 | 10 |  5
  4 | 1 | 10 |  5
  5 | 1 | 10 |  5
  6 | 2 | 10 |  5
  7 | 2 | 10 |  5
  8 | 2 | 10 |  5
  9 | 3 | 10 |  5
 10 | 3 | 10 |  5
 11 | 3 | 10 |  5
 12 | 4 | 10 |  5
 13 | 4 | 10 |  5
 14 | 4 | 10 |  5
 15 | 5 | 10 |  5
 16 | 5 | 10 |  5
 17 | 5 | 10 |  5
 18 | 6 | 10 |  5
 19 | 6 | 10 |  5
 20 | 6 | 10 |  5
  1 | 0 | 11 |  5
  2 | 0 | 11 |  5
  3 | 1 | 11 |  5
  4 | 1 | 11 |  5
  5 | 1 | 11 |  5
  6 | 2 | 11 |  5
  7 | 2 | 11 |  5
  8 | 2 | 11 |  5
  9 | 3 | 11 |  5
 10 | 3 | 11 |  5
 11 | 3 | 11 |  5
 12 | 4 | 11 |  5
 13 | 4 | 11 |  5
 14 | 4 | 11 |  5
 15 | 5 | 11 |  5
 16 | 5 | 11 |  5
 17 | 5 | 11 |  5
 18 | 6 | 11 |  5
 19 | 6 | 11 |  5
 20 | 6 | 11 |  5
  1 | 0 | 12 |  6
  2 | 0 | 12 |  6
  3 | 1 | 12 |  6
  4 | 1 | 12 |  6
  5 | 1 | 12 |  6
  6 | 2 | 12 |  6
  7 | 2 | 12 |  6
  8 | 2 | 12 |  6
  9 | 3 | 12 |  6
 10 | 3 | 12 |  6
 11 | 3 | 12 |  6
 12 | 4 | 12 |  6
 13 | 4 | 12 |  6
 14 | 4 | 12 |  6
 15 | 5 | 12 |  6
 16 | 5 | 12 |  6
 17 | 5 | 12 |  6
 18 | 6 | 12 |  6
 19 | 6 | 12 |  6
 20 | 6 | 12 |  6
  1 | 0 | 13 |  6
  2 | 0 | 13 |  6
  3 | 1 | 13 |  6
  4 | 1 | 13 |  6
  5 | 1 | 13 |  6
  6 | 2 | 13 |  6
  7 | 2 | 13 |  6
  8 | 2 | 13 |  6
  9 | 3 | 13 |  6
 10 | 3 | 13 |  6
 11 | 3 | 13 |  6
 12 | 4 | 13 |  6
 13 | 4 | 13 |  6
 14 | 4 | 13 |  6
 15 | 5 | 13 |  6
 16 | 5 | 13 |  6
 17 | 5 | 13 |  6
 18 | 6 | 13 |  6
 19 | 6 | 13 |  6
 20 | 6 | 13 |  6
  1 | 0 | 14 |  7
  2 | 0 | 14 |  7
  3 | 1 | 14 |  7
  4 | 1 | 14 |  7
  5 | 1 | 14 |  7
  6 | 2 | 14 |  7
  7 | 2 | 14 |  7
  8 | 2 | 14 |  7
  9 | 3 | 14 |  7
 10 | 3 | 14 |  7
 11 | 3 | 14 |  7
 12 | 4 | 14 |  7
 13 | 4 | 14 |  7
 14 | 4 | 14 |  7
 15 | 5 | 14 |  7
 16 | 5 | 14 |  7
 17 | 5 | 14 |  7
 18 | 6 | 14 |  7
 19 | 6 | 14 |  7
 20 | 6 | 14 |  7
  1 | 0 | 15 |  7
  2 | 0 | 15 |  7
  3 | 1 | 15 |  7
  4 | 1 | 15 |  7
  5 | 1 | 15 |  7
  6 | 2 | 15 |  7
  7 | 2 | 15 |  7
  8 | 2 | 15 |  7
  9 | 3 | 15 |  7
 10 | 3 | 15 |  7
 11 | 3 | 15 |  7
 12 | 4 | 15 |  7
 13 | 4 | 15 |  7
 14 | 4 | 15 |  7
 15 | 5 | 15 |  7
 16 | 5 | 15 |  7
 17 | 5 | 15 |  7
 18 | 6 | 15 |  7
 19 | 6 | 15 |  7
 20 | 6 | 15 |  7
  1 | 0 | 16 |  8
  2 | 0 | 16 |  8
  3 | 1 | 16 |  8
  4 | 1 | 16 |  8
  5 | 1 | 16 |  8
  6 | 2 | 16 |  8
  7 | 2 | 16 |  8
  8 | 2 | 16 |  8
  9 | 3 | 16 |  8
 10 | 3 | 16 |  8
 11 | 3 | 16 |  8
 12 | 4 | 16 |  8
 13 | 4 | 16 |  8
 14 | 4 | 16 |  8
 15 | 5 | 16 |  8
 16 | 5 | 16 |  8
 17 | 5 | 16 |  8
 18 | 6 | 16 |  8
 19 | 6 | 16 |  8
 20 | 6 | 16 |  8
  1 | 0 | 17 |  8
  2 | 0 | 17 |  8
  3 | 1 | 17 |  8
  4 | 1 | 17 |  8
  5 | 1 | 17 |  8
  6 | 2 | 17 |  8
  7 | 2 | 17 |  8
  8 | 2 | 17 |  8
  9 | 3 | 17 |  8
 10 | 3 | 17 |  8
 11 | 3 | 17 |  8
 12 | 4 | 17 |  8
 13 | 4 | 17 |  8
 14 | 4 | 17 |  8
 15 | 5 | 17 |  8
 16 | 5 | 17 |  8
 17 | 5 | 17 |  8
 18 | 6 | 17 |  8
 19 | 6 | 17 |  8
 20 | 6 | 17 |  8
  1 | 0 | 18 |  9
  2 | 0 | 18 |  9
  3 | 1 | 18 |  9
  4 | 1 | 18 |  9
  5 | 1 | 18 |  9
  6 | 2 | 18 |  9
  7 | 2 | 18 |  9
  8 | 2 | 18 |  9
  9 | 3 | 18 |  9
 10 | 3 | 18 |  9
 11 | 3 | 18 |  9
 12 | 4 | 18 |  9
 13 | 4 | 18 |  9
 14 | 4 | 18 |  9
 15 | 5 | 18 |  9
 16 | 5 | 18 |  9
 17 | 5 | 18 |  9
 18 | 6 | 18 |  9
 19 | 6 | 18 |  9
 20 | 6 | 18 |  9
  1 | 0 | 19 |  9
  2 | 0 | 19 |  9
  3 | 1 | 19 |  9
  4 | 1 | 19 |  9
  5 | 1 | 19 |  9
  6 | 2 | 19 |  9
  7 | 2 | 19 |  9
  8 | 2 | 19 |  9
  9 | 3 | 19 |  9
 10 | 3 | 19 |  9
 11 | 3 | 19 |  9
 12 | 4 | 19 |  9
 13 | 4 | 19 |  9
 14 | 4 | 19 |  9
 15 | 5 | 19 |  9
 16 | 5 | 19 |  9
 17 | 5 | 19 |  9
 18 | 6 | 19 |  9
 19 | 6 | 19 |  9
 20 | 6 | 19 |  9
  1 | 0 | 20 | 10
  2 | 0 | 20 | 10
  3 | 1 | 20 | 10
  4 | 1 | 20 | 10
  5 | 1 | 20 | 10
  6 | 2 | 20 | 10
  7 | 2 | 20 | 10
  8 | 2 | 20 | 10
  9 | 3 | 20 | 10
 10 | 3 | 20 | 10
 11 | 3 | 20 | 10
 12 | 4 | 20 | 10
 13 | 4 | 20 | 10
 14 | 4 | 20 | 10
 15 | 5 | 20 | 10
 16 | 5 | 20 | 10
 17 | 5 | 20 | 10
 18 | 6 | 20 | 10
 19 | 6 | 20 | 10
 20 | 6 | 20 | 10
  1 | 0 | 21 | 10
  2 | 0 | 21 | 10
  3 | 1 | 21 | 10
  4 | 1 | 21 | 10
  5 | 1 | 21 | 10
  6 | 2 | 21 | 10
  7 | 2 | 21 | 10
  8 | 2 | 21 | 10
  9 | 3 | 21 | 10
 10 | 3 | 21 | 10
 11 | 3 | 21 | 10
 12 | 4 | 21 | 10
 13 | 4 | 21 | 10
 14 | 4 | 21 | 10
 15 | 5 | 21 | 10
 16 | 5 | 21 | 10
 17 | 5 | 21 | 10
 18 | 6 | 21 | 10
 19 | 6 | 21 | 10
 20 | 6 | 21 | 10
  1 | 0 | 22 | 11
  2 | 0 | 22 | 11
  3 | 1 | 22 | 11
  4 | 1 | 22 | 11
  5 | 1 | 22 | 11
  6 | 2 | 22 | 11
  7 | 2 | 22 | 11
  8 | 2 | 22 | 11
  9 | 3 | 22 | 11
 10 | 3 | 22 | 11
 11 | 3 | 22 | 11
 12 | 4 | 22 | 11
 13 | 4 | 22 | 11
 14 | 4 | 22 | 11
 15 | 5 | 22 | 11
 16 | 5 | 22 | 11
 17 | 5 | 22 | 11
 18 | 6 | 22 | 11
 19 | 6 | 22 | 11
 20 | 6 | 22 | 11
  1 | 0 | 23 | 11
  2 | 0 | 23 | 11
  3 | 1 | 23 | 11
  4 | 1 | 23 | 11
  5 | 1 | 23 | 11
  6 | 2 | 23 | 11
  7 | 2 | 23 | 11
  8 | 2 | 23 | 11
  9 | 3 | 23 | 11
 10 | 3 | 23 | 11
 11 | 3 | 23 | 11
 12 | 4 | 23 | 11
 13 | 4 | 23 | 11
 14 | 4 | 23 | 11
 15 | 5 | 23 | 11
 16 | 5 | 23 | 11
 17 | 5 | 23 | 11
 18 | 6 | 23 | 11
 19 | 6 | 23 | 11
 20 | 6 | 23 | 11
  1 | 0 | 24 | 12
  2 | 0 | 24 | 12
  3 | 1 | 24 | 12
  4 | 1 | 24 | 12
  5 | 1 | 24 | 12
  6 | 2 | 24 | 12
  7 | 2 | 24 | 12
  8 | 2 | 24 | 12
  9 | 3 | 24 | 12
 10 | 3 | 24 | 12
 11 | 3 | 24 | 12
 12 | 4 | 24 | 12
 13 | 4 | 24 | 12
 14 | 4 | 24 | 12
 15 | 5 | 24 | 12
 16 | 5 | 24 | 12
 17 | 5 | 24 | 12
 18 | 6 | 24 | 12
 19 | 6 | 24 | 12
 20 | 6 | 24 | 12
  1 | 0 | 25 | 12
  2 | 0 | 25 | 12
  3 | 1 | 25 | 12
  4 | 1 | 25 | 12
  5 | 1 | 25 | 12
  6 | 2 | 25 | 12
  7 | 2 | 25 | 12
  8 | 2 | 25 | 12
  9 | 3 | 25 | 12
 10 | 3 | 25 | 12
 11 | 3 | 25 | 12
 12 | 4 | 25 | 12
 13 | 4 | 25 | 12
 14 | 4 | 25 | 12
 15 | 5 | 25 | 12
 16 | 5 | 25 | 12
 17 | 5 | 25 | 12
 18 | 6 | 25 | 12
 19 | 6 | 25 | 12
 20 | 6 | 25 | 12
  1 | 0 | 26 | 13
  2 | 0 | 26 | 13
  3 | 1 | 26 | 13
  4 | 1 | 26 | 13
  5 | 1 | 26 | 13
  6 | 2 | 26 | 13
  7 | 2 | 26 | 13
  8 | 2 | 26 | 13
  9 | 3 | 26 | 13
 10 | 3 | 26 | 13
 11 | 3 | 26 | 13
 12 | 4 | 26 | 13
 13 | 4 | 26 | 13
 14 | 4 | 26 | 13
 15 | 5 | 26 | 13
 16 | 5 | 26 | 13
 17 | 5 | 26 | 13
 18 | 6 | 26 | 13
 19 | 6 | 26 | 13
 20 | 6 | 26 | 13
  1 | 0 | 27 | 13
  2 | 0 | 27 | 13
  3 | 1 | 27 | 13
  4 | 1 | 27 | 13
  5 | 1 | 27 | 13
  6 | 2 | 27 | 13
  7 | 2 | 27 | 13
  8 | 2 | 27 | 13
  9 | 3 | 27 | 13
 10 | 3 | 27 | 13
 11 | 3 | 27 | 13
 12 | 4 | 27 | 13
 13 | 4 | 27 | 13
 14 | 4 | 27 | 13
 15 | 5 | 27 | 13
 16 | 5 | 27 | 13
 17 | 5 | 27 | 13
 18 | 6 | 27 | 13
 19 | 6 | 27 | 13
 20 | 6 | 27 | 13
  1 | 0 | 28 | 14
  2 | 0 | 28 | 14
  3 | 1 | 28 | 14
  4 | 1 | 28 | 14
  5 | 1 | 28 | 14
  6 | 2 | 28 | 14
  7 | 2 | 28 | 14
  8 | 2 | 28 | 14
  9 | 3 | 28 | 14
 10 | 3 | 28 | 14
 11 | 3 | 28 | 14
 12 | 4 | 28 | 14
 13 | 4 | 28 | 14
 14 | 4 | 28 | 14
 15 | 5 | 28 | 14
 16 | 5 | 28 | 14
 17 | 5 | 28 | 14
 18 | 6 | 28 | 14
 19 | 6 | 28 | 14
 20 | 6 | 28 | 14
  1 | 0 | 29 | 14
  2 | 0 | 29 | 14
  3 | 1 | 29 | 14
  4 | 1 | 29 | 14
  5 | 1 | 29 | 14
  6 | 2 | 29 | 14
  7 | 2 | 29 | 14
  8 | 2 | 29 | 14
  9 | 3 | 29 | 14
 10 | 3 | 29 | 14
 11 | 3 | 29 | 14
 12 | 4 | 29 | 14
 13 | 4 | 29 | 14
 14 | 4 | 29 | 14
 15 | 5 | 29 | 14
 16 | 5 | 29 | 14
 17 | 5 | 29 | 14
 18 | 6 | 29 | 14
 19 | 6 | 29 | 14
 20 | 6 | 29 | 14
  1 | 0 | 30 | 15
  2 | 0 | 30 | 15
  3 | 1 | 30 | 15
  4 | 1 | 30 | 15
  5 | 1 | 30 | 15
  6 | 2 | 30 | 15
  7 | 2 | 30 | 15
  8 | 2 | 30 | 15
  9 | 3 | 30 | 15
 10 | 3 | 30 | 15
 11 | 3 | 30 | 15
 12 | 4 | 30 | 15
 13 | 4 | 30 | 15
 14 | 4 | 30 | 15
 15 | 5 | 30 | 15
 16 | 5 | 30 | 15
 17 | 5 | 30 | 15
 18 | 6 | 30 | 15
 19 | 6 | 30 | 15
 20 | 6 | 30 | 15
(600 rows)

select sum(r.a) from orca.r;
 sum 
-----
 210
(1 row)

select count(*) from orca.r;
 count 
-------
    20
(1 row)

select a, b from orca.r, orca.s group by a,b;
 a  | b 
----+---
  1 | 0
  2 | 0
  3 | 1
  4 | 1
  5 | 1
  6 | 2
  7 | 2
  8 | 2
  9 | 3
 10 | 3
 11 | 3
 12 | 4
 13 | 4
 14 | 4
 15 | 5
 16 | 5
 17 | 5
 18 | 6
 19 | 6
 20 | 6
(20 rows)

select r.a+1 from orca.r;
 ?column? 
----------
        2
        3
        4
        5
        6
        7
        8
        9
       10
       11
       12
       13
       14
       15
       16
       17
       18
       19
       20
       21
(20 rows)

select * from orca.r, orca.s where r.a<s.c or (r.b<s.d and r.b>s.c);
 a  | b | c  | d  
----+---+----+----
  1 | 0 |  2 |  1
  1 | 0 |  3 |  1
  2 | 0 |  3 |  1
  1 | 0 |  4 |  2
  2 | 0 |  4 |  2
  3 | 1 |  4 |  2
  1 | 0 |  5 |  2
  2 | 0 |  5 |  2
  3 | 1 |  5 |  2
  4 | 1 |  5 |  2
  1 | 0 |  6 |  3
  2 | 0 |  6 |  3
  3 | 1 |  6 |  3
  4 | 1 |  6 |  3
  5 | 1 |  6 |  3
  1 | 0 |  7 |  3
  2 | 0 |  7 |  3
  3 | 1 |  7 |  3
  4 | 1 |  7 |  3
  5 | 1 |  7 |  3
  6 | 2 |  7 |  3
  1 | 0 |  8 |  4
  2 | 0 |  8 |  4
  3 | 1 |  8 |  4
  4 | 1 |  8 |  4
  5 | 1 |  8 |  4
  6 | 2 |  8 |  4
  7 | 2 |  8 |  4
  1 | 0 |  9 |  4
  2 | 0 |  9 |  4
  3 | 1 |  9 |  4
  4 | 1 |  9 |  4
  5 | 1 |  9 |  4
  6 | 2 |  9 |  4
  7 | 2 |  9 |  4
  8 | 2 |  9 |  4
  1 | 0 | 10 |  5
  2 | 0 | 10 |  5
  3 | 1 | 10 |  5
  4 | 1 | 10 |  5
  5 | 1 | 10 |  5
  6 | 2 | 10 |  5
  7 | 2 | 10 |  5
  8 | 2 | 10 |  5
  9 | 3 | 10 |  5
  1 | 0 | 11 |  5
  2 | 0 | 11 |  5
  3 | 1 | 11 |  5
  4 | 1 | 11 |  5
  5 | 1 | 11 |  5
  6 | 2 | 11 |  5
  7 | 2 | 11 |  5
  8 | 2 | 11 |  5
  9 | 3 | 11 |  5
 10 | 3 | 11 |  5
  1 | 0 | 12 |  6
  2 | 0 | 12 |  6
  3 | 1 | 12 |  6
  4 | 1 | 12 |  6
  5 | 1 | 12 |  6
  6 | 2 | 12 |  6
  7 | 2 | 12 |  6
  8 | 2 | 12 |  6
  9 | 3 | 12 |  6
 10 | 3 | 12 |  6
 11 | 3 | 12 |  6
  1 | 0 | 13 |  6
  2 | 0 | 13 |  6
  3 | 1 | 13 |  6
  4 | 1 | 13 |  6
  5 | 1 | 13 |  6
  6 | 2 | 13 |  6
  7 | 2 | 13 |  6
  8 | 2 | 13 |  6
  9 | 3 | 13 |  6
 10 | 3 | 13 |  6
 11 | 3 | 13 |  6
 12 | 4 | 13 |  6
  1 | 0 | 14 |  7
  2 | 0 | 14 |  7
  3 | 1 | 14 |  7
  4 | 1 | 14 |  7
  5 | 1 | 14 |  7
  6 | 2 | 14 |  7
  7 | 2 | 14 |  7
  8 | 2 | 14 |  7
  9 | 3 | 14 |  7
 10 | 3 | 14 |  7
 11 | 3 | 14 |  7
 12 | 4 | 14 |  7
 13 | 4 | 14 |  7
  1 | 0 | 15 |  7
  2 | 0 | 15 |  7
  3 | 1 | 15 |  7
  4 | 1 | 15 |  7
  5 | 1 | 15 |  7
  6 | 2 | 15 |  7
  7 | 2 | 15 |  7
  8 | 2 | 15 |  7
  9 | 3 | 15 |  7
 10 | 3 | 15 |  7
 11 | 3 | 15 |  7
 12 | 4 | 15 |  7
 13 | 4 | 15 |  7
 14 | 4 | 15 |  7
  1 | 0 | 16 |  8
  2 | 0 | 16 |  8
  3 | 1 | 16 |  8
  4 | 1 | 16 |  8
  5 | 1 | 16 |  8
  6 | 2 | 16 |  8
  7 | 2 | 16 |  8
  8 | 2 | 16 |  8
  9 | 3 | 16 |  8
 10 | 3 | 16 |  8
 11 | 3 | 16 |  8
 12 | 4 | 16 |  8
 13 | 4 | 16 |  8
 14 | 4 | 16 |  8
 15 | 5 | 16 |  8
  1 | 0 | 17 |  8
  2 | 0 | 17 |  8
  3 | 1 | 17 |  8
  4 | 1 | 17 |  8
  5 | 1 | 17 |  8
  6 | 2 | 17 |  8
  7 | 2 | 17 |  8
  8 | 2 | 17 |  8
  9 | 3 | 17 |  8
 10 | 3 | 17 |  8
 11 | 3 | 17 |  8
 12 | 4 | 17 |  8
 13 | 4 | 17 |  8
 14 | 4 | 17 |  8
 15 | 5 | 17 |  8
 16 | 5 | 17 |  8
  1 | 0 | 18 |  9
  2 | 0 | 18 |  9
  3 | 1 | 18 |  9
  4 | 1 | 18 |  9
  5 | 1 | 18 |  9
  6 | 2 | 18 |  9
  7 | 2 | 18 |  9
  8 | 2 | 18 |  9
  9 | 3 | 18 |  9
 10 | 3 | 18 |  9
 11 | 3 | 18 |  9
 12 | 4 | 18 |  9
 13 | 4 | 18 |  9
 14 | 4 | 18 |  9
 15 | 5 | 18 |  9
 16 | 5 | 18 |  9
 17 | 5 | 18 |  9
  1 | 0 | 19 |  9
  2 | 0 | 19 |  9
  3 | 1 | 19 |  9
  4 | 1 | 19 |  9
  5 | 1 | 19 |  9
  6 | 2 | 19 |  9
  7 | 2 | 19 |  9
  8 | 2 | 19 |  9
  9 | 3 | 19 |  9
 10 | 3 | 19 |  9
 11 | 3 | 19 |  9
 12 | 4 | 19 |  9
 13 | 4 | 19 |  9
 14 | 4 | 19 |  9
 15 | 5 | 19 |  9
 16 | 5 | 19 |  9
 17 | 5 | 19 |  9
 18 | 6 | 19 |  9
  1 | 0 | 20 | 10
  2 | 0 | 20 | 10
  3 | 1 | 20 | 10
  4 | 1 | 20 | 10
  5 | 1 | 20 | 10
  6 | 2 | 20 | 10
  7 | 2 | 20 | 10
  8 | 2 | 20 | 10
  9 | 3 | 20 | 10
 10 | 3 | 20 | 10
 11 | 3 | 20 | 10
 12 | 4 | 20 | 10
 13 | 4 | 20 | 10
 14 | 4 | 20 | 10
 15 | 5 | 20 | 10
 16 | 5 | 20 | 10
 17 | 5 | 20 | 10
 18 | 6 | 20 | 10
 19 | 6 | 20 | 10
  1 | 0 | 21 | 10
  2 | 0 | 21 | 10
  3 | 1 | 21 | 10
  4 | 1 | 21 | 10
  5 | 1 | 21 | 10
  6 | 2 | 21 | 10
  7 | 2 | 21 | 10
  8 | 2 | 21 | 10
  9 | 3 | 21 | 10
 10 | 3 | 21 | 10
 11 | 3 | 21 | 10
 12 | 4 | 21 | 10
 13 | 4 | 21 | 10
 14 | 4 | 21 | 10
 15 | 5 | 21 | 10
 16 | 5 | 21 | 10
 17 | 5 | 21 | 10
 18 | 6 | 21 | 10
 19 | 6 | 21 | 10
 20 | 6 | 21 | 10
  1 | 0 | 22 | 11
  2 | 0 | 22 | 11
  3 | 1 | 22 | 11
  4 | 1 | 22 | 11
  5 | 1 | 22 | 11
  6 | 2 | 22 | 11
  7 | 2 | 22 | 11
  8 | 2 | 22 | 11
  9 | 3 | 22 | 11
 10 | 3 | 22 | 11
 11 | 3 | 22 | 11
 12 | 4 | 22 | 11
 13 | 4 | 22 | 11
 14 | 4 | 22 | 11
 15 | 5 | 22 | 11
 16 | 5 | 22 | 11
 17 | 5 | 22 | 11
 18 | 6 | 22 | 11
 19 | 6 | 22 | 11
 20 | 6 | 22 | 11
  1 | 0 | 23 | 11
  2 | 0 | 23 | 11
  3 | 1 | 23 | 11
  4 | 1 | 23 | 11
  5 | 1 | 23 | 11
  6 | 2 | 23 | 11
  7 | 2 | 23 | 11
  8 | 2 | 23 | 11
  9 | 3 | 23 | 11
 10 | 3 | 23 | 11
 11 | 3 | 23 | 11
 12 | 4 | 23 | 11
 13 | 4 | 23 | 11
 14 | 4 | 23 | 11
 15 | 5 | 23 | 11
 16 | 5 | 23 | 11
 17 | 5 | 23 | 11
 18 | 6 | 23 | 11
 19 | 6 | 23 | 11
 20 | 6 | 23 | 11
  1 | 0 | 24 | 12
  2 | 0 | 24 | 12
  3 | 1 | 24 | 12
  4 | 1 | 24 | 12
  5 | 1 | 24 | 12
  6 | 2 | 24 | 12
  7 | 2 | 24 | 12
  8 | 2 | 24 | 12
  9 | 3 | 24 | 12
 10 | 3 | 24 | 12
 11 | 3 | 24 | 12
 12 | 4 | 24 | 12
 13 | 4 | 24 | 12
 14 | 4 | 24 | 12
 15 | 5 | 24 | 12
 16 | 5 | 24 | 12
 17 | 5 | 24 | 12
 18 | 6 | 24 | 12
 19 | 6 | 24 | 12
 20 | 6 | 24 | 12
  1 | 0 | 25 | 12
  2 | 0 | 25 | 12
  3 | 1 | 25 | 12
  4 | 1 | 25 | 12
  5 | 1 | 25 | 12
  6 | 2 | 25 | 12
  7 | 2 | 25 | 12
  8 | 2 | 25 | 12
  9 | 3 | 25 | 12
 10 | 3 | 25 | 12
 11 | 3 | 25 | 12
 12 | 4 | 25 | 12
 13 | 4 | 25 | 12
 14 | 4 | 25 | 12
 15 | 5 | 25 | 12
 16 | 5 | 25 | 12
 17 | 5 | 25 | 12
 18 | 6 | 25 | 12
 19 | 6 | 25 | 12
 20 | 6 | 25 | 12
  1 | 0 | 26 | 13
  2 | 0 | 26 | 13
  3 | 1 | 26 | 13
  4 | 1 | 26 | 13
  5 | 1 | 26 | 13
  6 | 2 | 26 | 13
  7 | 2 | 26 | 13
  8 | 2 | 26 | 13
  9 | 3 | 26 | 13
 10 | 3 | 26 | 13
 11 | 3 | 26 | 13
 12 | 4 | 26 | 13
 13 | 4 | 26 | 13
 14 | 4 | 26 | 13
 15 | 5 | 26 | 13
 16 | 5 | 26 | 13
 17 | 5 | 26 | 13
 18 | 6 | 26 | 13
 19 | 6 | 26 | 13
 20 | 6 | 26 | 13
  1 | 0 | 27 | 13
  2 | 0 | 27 | 13
  3 | 1 | 27 | 13
  4 | 1 | 27 | 13
  5 | 1 | 27 | 13
  6 | 2 | 27 | 13
  7 | 2 | 27 | 13
  8 | 2 | 27 | 13
  9 | 3 | 27 | 13
 10 | 3 | 27 | 13
 11 | 3 | 27 | 13
 12 | 4 | 27 | 13
 13 | 4 | 27 | 13
 14 | 4 | 27 | 13
 15 | 5 | 27 | 13
 16 | 5 | 27 | 13
 17 | 5 | 27 | 13
 18 | 6 | 27 | 13
 19 | 6 | 27 | 13
 20 | 6 | 27 | 13
  1 | 0 | 28 | 14
  2 | 0 | 28 | 14
  3 | 1 | 28 | 14
  4 | 1 | 28 | 14
  5 | 1 | 28 | 14
  6 | 2 | 28 | 14
  7 | 2 | 28 | 14
  8 | 2 | 28 | 14
  9 | 3 | 28 | 14
 10 | 3 | 28 | 14
 11 | 3 | 28 | 14
 12 | 4 | 28 | 14
 13 | 4 | 28 | 14
 14 | 4 | 28 | 14
 15 | 5 | 28 | 14
 16 | 5 | 28 | 14
 17 | 5 | 28 | 14
 18 | 6 | 28 | 14
 19 | 6 | 28 | 14
 20 | 6 | 28 | 14
  1 | 0 | 29 | 14
  2 | 0 | 29 | 14
  3 | 1 | 29 | 14
  4 | 1 | 29 | 14
  5 | 1 | 29 | 14
  6 | 2 | 29 | 14
  7 | 2 | 29 | 14
  8 | 2 | 29 | 14
  9 | 3 | 29 | 14
 10 | 3 | 29 | 14
 11 | 3 | 29 | 14
 12 | 4 | 29 | 14
 13 | 4 | 29 | 14
 14 | 4 | 29 | 14
 15 | 5 | 29 | 14
 16 | 5 | 29 | 14
 17 | 5 | 29 | 14
 18 | 6 | 29 | 14
 19 | 6 | 29 | 14
 20 | 6 | 29 | 14
  1 | 0 | 30 | 15
  2 | 0 | 30 | 15
  3 | 1 | 30 | 15
  4 | 1 | 30 | 15
  5 | 1 | 30 | 15
  6 | 2 | 30 | 15
  7 | 2 | 30 | 15
  8 | 2 | 30 | 15
  9 | 3 | 30 | 15
 10 | 3 | 30 | 15
 11 | 3 | 30 | 15
 12 | 4 | 30 | 15
 13 | 4 | 30 | 15
 14 | 4 | 30 | 15
 15 | 5 | 30 | 15
 16 | 5 | 30 | 15
 17 | 5 | 30 | 15
 18 | 6 | 30 | 15
 19 | 6 | 30 | 15
 20 | 6 | 30 | 15
(390 rows)

select case when r.a<s.c then r.a<s.c else r.a<s.c end from orca.r, orca.s;
 case 
------
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 f
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
 t
(600 rows)

select case r.b<s.c when true then r.b else s.c end from orca.r, orca.s where r.a = s.d;
 c 
---
 0
 0
 0
 0
 1
 1
 1
 1
 1
 1
 2
 2
 2
 2
 2
 2
 3
 3
 3
 3
 3
 3
 4
 4
 4
 4
 4
 4
 5
(29 rows)

select * from orca.r limit 100;
 a  | b 
----+---
  1 | 0
  2 | 0
  3 | 1
  4 | 1
  5 | 1
  6 | 2
  7 | 2
  8 | 2
  9 | 3
 10 | 3
 11 | 3
 12 | 4
 13 | 4
 14 | 4
 15 | 5
 16 | 5
 17 | 5
 18 | 6
 19 | 6
 20 | 6
(20 rows)

select * from orca.r limit 10 offset 9;
 a  | b 
----+---
 10 | 3
 11 | 3
 12 | 4
 13 | 4
 14 | 4
 15 | 5
 16 | 5
 17 | 5
 18 | 6
 19 | 6
(10 rows)

select * from orca.r offset 10;
 a  | b 
----+---
 11 | 3
 12 | 4
 13 | 4
 14 | 4
 15 | 5
 16 | 5
 17 | 5
 18 | 6
 19 | 6
 20 | 6
(10 rows)

select sqrt(r.a) from orca.r;
       sqrt       
------------------
                1
  1.4142135623731
 1.73205080756888
                2
 2.23606797749979
 2.44948974278318
 2.64575131106459
 2.82842712474619
                3
 3.16227766016838
  3.3166247903554
 3.46410161513775
 3.60555127546399
 3.74165738677394
 3.87298334620742
                4
 4.12310562561766
 4.24264068711928
 4.35889894354067
 4.47213595499958
(20 rows)

select pow(r.b,r.a) from orca.r;
         pow          
----------------------
                    0
                    0
                    1
                    1
                    1
                   64
                  128
                  256
                19683
                59049
               177147
             16777216
             67108864
            268435456
          30517578125
         152587890625
         762939453125
      101559956668416
      609359740010496
 3.65615844006298e+15
(20 rows)

select b from orca.r group by b having  count(*) > 2;
 b 
---
 1
 2
 3
 4
 5
 6
(6 rows)

select b from orca.r group by b having  count(*) <= avg(a) + (select count(*) from orca.s where s.c = r.b);
 b 
---
 1
 2
 3
 4
 5
 6
(6 rows)

select sum(a) from orca.r group by b having count(*) > 2 order by b+1;
 sum 
-----
  12
  21
  30
  39
  48
  57
(6 rows)

select sum(a) from orca.r group by b having count(*) > 2 order by b+1;
 sum 
-----
  12
  21
  30
  39
  48
  57
(6 rows)

-- constants
select 0.001::numeric from orca.r;
 numeric 
---------
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
(20 rows)

select NULL::text, NULL::int from orca.r;
 text | int4 
------+------
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
(20 rows)

select 'helloworld'::text, 'helloworld2'::varchar from orca.r;
    text    |   varchar   
------------+-------------
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
(20 rows)

select 129::bigint, 5623::int, 45::smallint from orca.r;
 int8 | int4 | int2 
------+------+------
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
(20 rows)

select 0.001::numeric from orca.r;
 numeric 
---------
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
   0.001
(20 rows)

select NULL::text, NULL::int from orca.r;
 text | int4 
------+------
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
      |     
(20 rows)

select 'helloworld'::text, 'helloworld2'::varchar from orca.r;
    text    |   varchar   
------------+-------------
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
 helloworld | helloworld2
(20 rows)

select 129::bigint, 5623::int, 45::smallint from orca.r;
 int8 | int4 | int2 
------+------+------
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
  129 | 5623 |   45
(20 rows)

--  distributed tables
----------------------------------------------------------------------
set optimizer=off;
create table orca.foo (x1 int, x2 int, x3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'x1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table orca.bar1 (x1 int, x2 int, x3 int) distributed randomly;
create table orca.bar2 (x1 int, x2 int, x3 int) distributed randomly;
insert into orca.foo select i,i+1,i+2 from generate_series(1,10) i;
insert into orca.bar1 select i,i+1,i+2 from generate_series(1,20) i;
insert into orca.bar2 select i,i+1,i+2 from generate_series(1,30) i;
set optimizer=on;
----------------------------------------------------------------------
-- produces result node
select x2 from orca.foo where x1 in (select x2 from orca.bar1);
 x2 
----
  3
  5
  7
  9
 11
  4
  6
  8
 10
(9 rows)

select 1;
 ?column? 
----------
        1
(1 row)

SELECT 1 AS one FROM orca.foo having 1 < 2;
 one 
-----
   1
(1 row)

SELECT generate_series(1,5) AS one FROM orca.foo having 1 < 2;
 one 
-----
   1
   2
   3
   4
   5
(5 rows)

SELECT 1 AS one FROM orca.foo group by x1 having 1 < 2;
 one 
-----
   1
   1
   1
   1
   1
   1
   1
   1
   1
   1
(10 rows)

SELECT x1 AS one FROM orca.foo having 1 < 2;
ERROR:  column "foo.x1" must appear in the GROUP BY clause or be used in an aggregate function
-- distinct clause
select distinct 1, null;
 ?column? | ?column? 
----------+----------
        1 | 
(1 row)

select distinct 1, null from orca.foo;
 ?column? | ?column? 
----------+----------
        1 | 
(1 row)

select distinct 1, sum(x1) from orca.foo;
 ?column? | sum 
----------+-----
        1 |  55
(1 row)

select distinct x1, rank() over(order by x1) from (select x1 from orca.foo order by x1) x;
 x1 | rank 
----+------
  1 |    1
  2 |    2
  3 |    3
  4 |    4
  5 |    5
  6 |    6
  7 |    7
  8 |    8
  9 |    9
 10 |   10
(10 rows)

select distinct x1, sum(x3) from orca.foo group by x1,x2;
 x1 | sum 
----+-----
  1 |   3
  2 |   4
  3 |   5
  4 |   6
  5 |   7
  6 |   8
  7 |   9
  8 |  10
  9 |  11
 10 |  12
(10 rows)
                                
select distinct s from (select sum(x2) s from orca.foo group by x1) x;
 s  
----
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
(10 rows)

select * from orca.foo a where a.x1 = (select distinct sum(b.x1)+avg(b.x1) sa from orca.bar1 b group by b.x3 order by sa limit 1);
 x1 | x2 | x3 
----+----+----
  2 |  3 |  4
(1 row)

select distinct a.x1 from orca.foo a where a.x1 <= (select distinct sum(b.x1)+avg(b.x1) sa from orca.bar1 b group by b.x3 order by sa limit 1) order by 1;
 x1 
----
  1
  2
(2 rows)

select * from orca.foo a where a.x1 = (select distinct b.x1 from orca.bar1 b where b.x1=a.x1 limit 1);
 x1 | x2 | x3 
----+----+----
  2 |  3 |  4
  4 |  5 |  6
  6 |  7 |  8
  8 |  9 | 10
 10 | 11 | 12
  1 |  2 |  3
  3 |  4 |  5
  5 |  6 |  7
  7 |  8 |  9
  9 | 10 | 11
(10 rows)

-- with clause
with cte1 as (select * from orca.foo) select a.x1+1 from (select * from cte1) a group by a.x1;
 ?column? 
----------
        2
        4
        6
        8
       10
        3
        5
        7
        9
       11
(10 rows)

select count(*)+1 from orca.bar1 b where b.x1 < any (with cte1 as (select * from orca.foo) select a.x1+1 from (select * from cte1) a group by a.x1);
 ?column? 
----------
       11
(1 row)

select count(*)+1 from orca.bar1 b where b.x1 < any (with cte1 as (select * from orca.foo) select a.x1 from (select * from cte1) a group by a.x1);
 ?column? 
----------
       10
(1 row)

select count(*)+1 from orca.bar1 b where b.x1 < any (with cte1 as (select * from orca.foo) select a.x1 from cte1 a group by a.x1);
 ?column? 
----------
       10
(1 row)

with cte1 as (select * from orca.foo) select count(*)+1 from cte1 a where a.x1 < any (with cte2 as (select * from cte1 b where b.x1 > 10) select c.x1 from (select * from cte2) c group by c.x1);
 ?column? 
----------
        1
(1 row)

with cte1 as (select * from orca.foo) select count(*)+1 from cte1 a where a.x1 < any (with cte2 as (select * from cte1 b where b.x1 > 10) select c.x1+1 from (select * from cte2) c group by c.x1);
 ?column? 
----------
        1
(1 row)

with x as (select * from orca.foo) select count(*) from (select * from x) y where y.x1 <= (select count(*) from x);
 count 
-------
    10
(1 row)

with x as (select * from orca.foo) select count(*)+1 from (select * from x) y where y.x1 <= (select count(*) from x);
 ?column? 
----------
       11
(1 row)

with x as (select * from orca.foo) select count(*) from (select * from x) y where y.x1 < (with z as (select * from x) select count(*) from z);
 count 
-------
     9
(1 row)

-- outer references
select count(*)+1 from orca.foo x where x.x1 > (select count(*)+1 from orca.bar1 y where y.x1 = x.x2);
 ?column? 
----------
        9
(1 row)

select count(*)+1 from orca.foo x where x.x1 > (select count(*) from orca.bar1 y where y.x1 = x.x2);
 ?column? 
----------
       10
(1 row)

select count(*) from orca.foo x where x.x1 > (select count(*)+1 from orca.bar1 y where y.x1 = x.x2);
 count 
-------
     8
(1 row)

----------------------------------------------------------------------
set optimizer=off;
drop table orca.r cascade;
create table orca.r(a int, b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create unique index r_a on orca.r(a);
create index r_b on orca.r(b);
insert into orca.r select i, i%3 from generate_series(1,20) i;
drop table orca.s;
create table orca.s(c int, d int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'c' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.s select i%7, i%2 from generate_series(1,30) i;
analyze orca.r;
analyze orca.s;
set optimizer=on;
----------------------------------------------------------------------
select * from orca.r, orca.s where r.a=s.c;
 a | b | c | d 
---+---+---+---
 2 | 2 | 2 | 0
 4 | 1 | 4 | 0
 6 | 0 | 6 | 0
 2 | 2 | 2 | 1
 4 | 1 | 4 | 1
 6 | 0 | 6 | 1
 2 | 2 | 2 | 0
 4 | 1 | 4 | 0
 6 | 0 | 6 | 0
 2 | 2 | 2 | 1
 4 | 1 | 4 | 1
 6 | 0 | 6 | 1
 2 | 2 | 2 | 0
 1 | 1 | 1 | 1
 3 | 0 | 3 | 1
 5 | 2 | 5 | 1
 1 | 1 | 1 | 0
 3 | 0 | 3 | 0
 5 | 2 | 5 | 0
 1 | 1 | 1 | 1
 3 | 0 | 3 | 1
 5 | 2 | 5 | 1
 1 | 1 | 1 | 0
 3 | 0 | 3 | 0
 5 | 2 | 5 | 0
 1 | 1 | 1 | 1
(26 rows)

-- Materialize node
select * from orca.r, orca.s where r.a<s.c+1 or r.a>s.c;
 a  | b | c | d 
----+---+---+---
  1 | 1 | 2 | 0
  3 | 0 | 2 | 0
  5 | 2 | 2 | 0
  7 | 1 | 2 | 0
  9 | 0 | 2 | 0
 11 | 2 | 2 | 0
 13 | 1 | 2 | 0
 15 | 0 | 2 | 0
 17 | 2 | 2 | 0
 19 | 1 | 2 | 0
  2 | 2 | 2 | 0
  4 | 1 | 2 | 0
  6 | 0 | 2 | 0
  8 | 2 | 2 | 0
 10 | 1 | 2 | 0
 12 | 0 | 2 | 0
 14 | 2 | 2 | 0
 16 | 1 | 2 | 0
 18 | 0 | 2 | 0
 20 | 2 | 2 | 0
  1 | 1 | 4 | 0
  3 | 0 | 4 | 0
  5 | 2 | 4 | 0
  7 | 1 | 4 | 0
  9 | 0 | 4 | 0
 11 | 2 | 4 | 0
 13 | 1 | 4 | 0
 15 | 0 | 4 | 0
 17 | 2 | 4 | 0
 19 | 1 | 4 | 0
  2 | 2 | 4 | 0
  4 | 1 | 4 | 0
  6 | 0 | 4 | 0
  8 | 2 | 4 | 0
 10 | 1 | 4 | 0
 12 | 0 | 4 | 0
 14 | 2 | 4 | 0
 16 | 1 | 4 | 0
 18 | 0 | 4 | 0
 20 | 2 | 4 | 0
  1 | 1 | 6 | 0
  3 | 0 | 6 | 0
  5 | 2 | 6 | 0
  7 | 1 | 6 | 0
  9 | 0 | 6 | 0
 11 | 2 | 6 | 0
 13 | 1 | 6 | 0
 15 | 0 | 6 | 0
 17 | 2 | 6 | 0
 19 | 1 | 6 | 0
  2 | 2 | 6 | 0
  4 | 1 | 6 | 0
  6 | 0 | 6 | 0
  8 | 2 | 6 | 0
 10 | 1 | 6 | 0
 12 | 0 | 6 | 0
 14 | 2 | 6 | 0
 16 | 1 | 6 | 0
 18 | 0 | 6 | 0
 20 | 2 | 6 | 0
  1 | 1 | 0 | 1
  3 | 0 | 0 | 1
  5 | 2 | 0 | 1
  7 | 1 | 0 | 1
  9 | 0 | 0 | 1
 11 | 2 | 0 | 1
 13 | 1 | 0 | 1
 15 | 0 | 0 | 1
 17 | 2 | 0 | 1
 19 | 1 | 0 | 1
  2 | 2 | 0 | 1
  4 | 1 | 0 | 1
  6 | 0 | 0 | 1
  8 | 2 | 0 | 1
 10 | 1 | 0 | 1
 12 | 0 | 0 | 1
 14 | 2 | 0 | 1
 16 | 1 | 0 | 1
 18 | 0 | 0 | 1
 20 | 2 | 0 | 1
  1 | 1 | 2 | 1
  3 | 0 | 2 | 1
  5 | 2 | 2 | 1
  7 | 1 | 2 | 1
  9 | 0 | 2 | 1
 11 | 2 | 2 | 1
 13 | 1 | 2 | 1
 15 | 0 | 2 | 1
 17 | 2 | 2 | 1
 19 | 1 | 2 | 1
  2 | 2 | 2 | 1
  4 | 1 | 2 | 1
  6 | 0 | 2 | 1
  8 | 2 | 2 | 1
 10 | 1 | 2 | 1
 12 | 0 | 2 | 1
 14 | 2 | 2 | 1
 16 | 1 | 2 | 1
 18 | 0 | 2 | 1
 20 | 2 | 2 | 1
  1 | 1 | 4 | 1
  3 | 0 | 4 | 1
  5 | 2 | 4 | 1
  7 | 1 | 4 | 1
  9 | 0 | 4 | 1
 11 | 2 | 4 | 1
 13 | 1 | 4 | 1
 15 | 0 | 4 | 1
 17 | 2 | 4 | 1
 19 | 1 | 4 | 1
  2 | 2 | 4 | 1
  4 | 1 | 4 | 1
  6 | 0 | 4 | 1
  8 | 2 | 4 | 1
 10 | 1 | 4 | 1
 12 | 0 | 4 | 1
 14 | 2 | 4 | 1
 16 | 1 | 4 | 1
 18 | 0 | 4 | 1
 20 | 2 | 4 | 1
  1 | 1 | 6 | 1
  3 | 0 | 6 | 1
  5 | 2 | 6 | 1
  7 | 1 | 6 | 1
  9 | 0 | 6 | 1
 11 | 2 | 6 | 1
 13 | 1 | 6 | 1
 15 | 0 | 6 | 1
 17 | 2 | 6 | 1
 19 | 1 | 6 | 1
  2 | 2 | 6 | 1
  4 | 1 | 6 | 1
  6 | 0 | 6 | 1
  8 | 2 | 6 | 1
 10 | 1 | 6 | 1
 12 | 0 | 6 | 1
 14 | 2 | 6 | 1
 16 | 1 | 6 | 1
 18 | 0 | 6 | 1
 20 | 2 | 6 | 1
  1 | 1 | 0 | 0
  3 | 0 | 0 | 0
  5 | 2 | 0 | 0
  7 | 1 | 0 | 0
  9 | 0 | 0 | 0
 11 | 2 | 0 | 0
 13 | 1 | 0 | 0
 15 | 0 | 0 | 0
 17 | 2 | 0 | 0
 19 | 1 | 0 | 0
  2 | 2 | 0 | 0
  4 | 1 | 0 | 0
  6 | 0 | 0 | 0
  8 | 2 | 0 | 0
 10 | 1 | 0 | 0
 12 | 0 | 0 | 0
 14 | 2 | 0 | 0
 16 | 1 | 0 | 0
 18 | 0 | 0 | 0
 20 | 2 | 0 | 0
  1 | 1 | 2 | 0
  3 | 0 | 2 | 0
  5 | 2 | 2 | 0
  7 | 1 | 2 | 0
  9 | 0 | 2 | 0
 11 | 2 | 2 | 0
 13 | 1 | 2 | 0
 15 | 0 | 2 | 0
 17 | 2 | 2 | 0
 19 | 1 | 2 | 0
  2 | 2 | 2 | 0
  4 | 1 | 2 | 0
  6 | 0 | 2 | 0
  8 | 2 | 2 | 0
 10 | 1 | 2 | 0
 12 | 0 | 2 | 0
 14 | 2 | 2 | 0
 16 | 1 | 2 | 0
 18 | 0 | 2 | 0
 20 | 2 | 2 | 0
  1 | 1 | 4 | 0
  3 | 0 | 4 | 0
  5 | 2 | 4 | 0
  7 | 1 | 4 | 0
  9 | 0 | 4 | 0
 11 | 2 | 4 | 0
 13 | 1 | 4 | 0
 15 | 0 | 4 | 0
 17 | 2 | 4 | 0
 19 | 1 | 4 | 0
  2 | 2 | 4 | 0
  4 | 1 | 4 | 0
  6 | 0 | 4 | 0
  8 | 2 | 4 | 0
 10 | 1 | 4 | 0
 12 | 0 | 4 | 0
 14 | 2 | 4 | 0
 16 | 1 | 4 | 0
 18 | 0 | 4 | 0
 20 | 2 | 4 | 0
  1 | 1 | 6 | 0
  3 | 0 | 6 | 0
  5 | 2 | 6 | 0
  7 | 1 | 6 | 0
  9 | 0 | 6 | 0
 11 | 2 | 6 | 0
 13 | 1 | 6 | 0
 15 | 0 | 6 | 0
 17 | 2 | 6 | 0
 19 | 1 | 6 | 0
  2 | 2 | 6 | 0
  4 | 1 | 6 | 0
  6 | 0 | 6 | 0
  8 | 2 | 6 | 0
 10 | 1 | 6 | 0
 12 | 0 | 6 | 0
 14 | 2 | 6 | 0
 16 | 1 | 6 | 0
 18 | 0 | 6 | 0
 20 | 2 | 6 | 0
  1 | 1 | 0 | 1
  3 | 0 | 0 | 1
  5 | 2 | 0 | 1
  7 | 1 | 0 | 1
  9 | 0 | 0 | 1
 11 | 2 | 0 | 1
 13 | 1 | 0 | 1
 15 | 0 | 0 | 1
 17 | 2 | 0 | 1
 19 | 1 | 0 | 1
  2 | 2 | 0 | 1
  4 | 1 | 0 | 1
  6 | 0 | 0 | 1
  8 | 2 | 0 | 1
 10 | 1 | 0 | 1
 12 | 0 | 0 | 1
 14 | 2 | 0 | 1
 16 | 1 | 0 | 1
 18 | 0 | 0 | 1
 20 | 2 | 0 | 1
  1 | 1 | 2 | 1
  3 | 0 | 2 | 1
  5 | 2 | 2 | 1
  7 | 1 | 2 | 1
  9 | 0 | 2 | 1
 11 | 2 | 2 | 1
 13 | 1 | 2 | 1
 15 | 0 | 2 | 1
 17 | 2 | 2 | 1
 19 | 1 | 2 | 1
  2 | 2 | 2 | 1
  4 | 1 | 2 | 1
  6 | 0 | 2 | 1
  8 | 2 | 2 | 1
 10 | 1 | 2 | 1
 12 | 0 | 2 | 1
 14 | 2 | 2 | 1
 16 | 1 | 2 | 1
 18 | 0 | 2 | 1
 20 | 2 | 2 | 1
  1 | 1 | 4 | 1
  3 | 0 | 4 | 1
  5 | 2 | 4 | 1
  7 | 1 | 4 | 1
  9 | 0 | 4 | 1
 11 | 2 | 4 | 1
 13 | 1 | 4 | 1
 15 | 0 | 4 | 1
 17 | 2 | 4 | 1
 19 | 1 | 4 | 1
  2 | 2 | 4 | 1
  4 | 1 | 4 | 1
  6 | 0 | 4 | 1
  8 | 2 | 4 | 1
 10 | 1 | 4 | 1
 12 | 0 | 4 | 1
 14 | 2 | 4 | 1
 16 | 1 | 4 | 1
 18 | 0 | 4 | 1
 20 | 2 | 4 | 1
  1 | 1 | 6 | 1
  3 | 0 | 6 | 1
  5 | 2 | 6 | 1
  7 | 1 | 6 | 1
  9 | 0 | 6 | 1
 11 | 2 | 6 | 1
 13 | 1 | 6 | 1
 15 | 0 | 6 | 1
 17 | 2 | 6 | 1
 19 | 1 | 6 | 1
  1 | 1 | 1 | 1
  3 | 0 | 1 | 1
  5 | 2 | 1 | 1
  7 | 1 | 1 | 1
  9 | 0 | 1 | 1
 11 | 2 | 1 | 1
 13 | 1 | 1 | 1
 15 | 0 | 1 | 1
 17 | 2 | 1 | 1
 19 | 1 | 1 | 1
  2 | 2 | 1 | 1
  4 | 1 | 1 | 1
  6 | 0 | 1 | 1
  8 | 2 | 1 | 1
 10 | 1 | 1 | 1
 12 | 0 | 1 | 1
 14 | 2 | 1 | 1
 16 | 1 | 1 | 1
 18 | 0 | 1 | 1
 20 | 2 | 1 | 1
  1 | 1 | 3 | 1
  3 | 0 | 3 | 1
  5 | 2 | 3 | 1
  7 | 1 | 3 | 1
  9 | 0 | 3 | 1
 11 | 2 | 3 | 1
 13 | 1 | 3 | 1
 15 | 0 | 3 | 1
 17 | 2 | 3 | 1
 19 | 1 | 3 | 1
  2 | 2 | 3 | 1
  4 | 1 | 3 | 1
  6 | 0 | 3 | 1
  8 | 2 | 3 | 1
 10 | 1 | 3 | 1
 12 | 0 | 3 | 1
 14 | 2 | 3 | 1
 16 | 1 | 3 | 1
 18 | 0 | 3 | 1
 20 | 2 | 3 | 1
  1 | 1 | 5 | 1
  3 | 0 | 5 | 1
  5 | 2 | 5 | 1
  7 | 1 | 5 | 1
  9 | 0 | 5 | 1
 11 | 2 | 5 | 1
 13 | 1 | 5 | 1
 15 | 0 | 5 | 1
 17 | 2 | 5 | 1
 19 | 1 | 5 | 1
  2 | 2 | 5 | 1
  4 | 1 | 5 | 1
  6 | 0 | 5 | 1
  8 | 2 | 5 | 1
 10 | 1 | 5 | 1
 12 | 0 | 5 | 1
 14 | 2 | 5 | 1
 16 | 1 | 5 | 1
 18 | 0 | 5 | 1
 20 | 2 | 5 | 1
  1 | 1 | 1 | 0
  3 | 0 | 1 | 0
  5 | 2 | 1 | 0
  7 | 1 | 1 | 0
  9 | 0 | 1 | 0
 11 | 2 | 1 | 0
 13 | 1 | 1 | 0
 15 | 0 | 1 | 0
 17 | 2 | 1 | 0
 19 | 1 | 1 | 0
  2 | 2 | 1 | 0
  4 | 1 | 1 | 0
  6 | 0 | 1 | 0
  8 | 2 | 1 | 0
 10 | 1 | 1 | 0
 12 | 0 | 1 | 0
 14 | 2 | 1 | 0
 16 | 1 | 1 | 0
 18 | 0 | 1 | 0
 20 | 2 | 1 | 0
  1 | 1 | 3 | 0
  3 | 0 | 3 | 0
  5 | 2 | 3 | 0
  7 | 1 | 3 | 0
  9 | 0 | 3 | 0
 11 | 2 | 3 | 0
 13 | 1 | 3 | 0
 15 | 0 | 3 | 0
 17 | 2 | 3 | 0
 19 | 1 | 3 | 0
  2 | 2 | 3 | 0
  4 | 1 | 3 | 0
  6 | 0 | 3 | 0
  8 | 2 | 3 | 0
 10 | 1 | 3 | 0
 12 | 0 | 3 | 0
 14 | 2 | 3 | 0
 16 | 1 | 3 | 0
 18 | 0 | 3 | 0
 20 | 2 | 3 | 0
  1 | 1 | 5 | 0
  3 | 0 | 5 | 0
  5 | 2 | 5 | 0
  7 | 1 | 5 | 0
  9 | 0 | 5 | 0
 11 | 2 | 5 | 0
 13 | 1 | 5 | 0
 15 | 0 | 5 | 0
 17 | 2 | 5 | 0
 19 | 1 | 5 | 0
  2 | 2 | 5 | 0
  4 | 1 | 5 | 0
  6 | 0 | 5 | 0
  8 | 2 | 5 | 0
 10 | 1 | 5 | 0
 12 | 0 | 5 | 0
 14 | 2 | 5 | 0
 16 | 1 | 5 | 0
 18 | 0 | 5 | 0
 20 | 2 | 5 | 0
  1 | 1 | 1 | 1
  3 | 0 | 1 | 1
  5 | 2 | 1 | 1
  7 | 1 | 1 | 1
  9 | 0 | 1 | 1
 11 | 2 | 1 | 1
 13 | 1 | 1 | 1
 15 | 0 | 1 | 1
 17 | 2 | 1 | 1
 19 | 1 | 1 | 1
  2 | 2 | 1 | 1
  4 | 1 | 1 | 1
  6 | 0 | 1 | 1
  8 | 2 | 1 | 1
 10 | 1 | 1 | 1
 12 | 0 | 1 | 1
 14 | 2 | 1 | 1
 16 | 1 | 1 | 1
 18 | 0 | 1 | 1
 20 | 2 | 1 | 1
  1 | 1 | 3 | 1
  3 | 0 | 3 | 1
  5 | 2 | 3 | 1
  7 | 1 | 3 | 1
  9 | 0 | 3 | 1
 11 | 2 | 3 | 1
 13 | 1 | 3 | 1
 15 | 0 | 3 | 1
 17 | 2 | 3 | 1
 19 | 1 | 3 | 1
  2 | 2 | 3 | 1
  4 | 1 | 3 | 1
  6 | 0 | 3 | 1
  8 | 2 | 3 | 1
 10 | 1 | 3 | 1
 12 | 0 | 3 | 1
 14 | 2 | 3 | 1
 16 | 1 | 3 | 1
 18 | 0 | 3 | 1
 20 | 2 | 3 | 1
  1 | 1 | 5 | 1
  3 | 0 | 5 | 1
  5 | 2 | 5 | 1
  7 | 1 | 5 | 1
  9 | 0 | 5 | 1
 11 | 2 | 5 | 1
 13 | 1 | 5 | 1
 15 | 0 | 5 | 1
 17 | 2 | 5 | 1
 19 | 1 | 5 | 1
  2 | 2 | 5 | 1
  4 | 1 | 5 | 1
  6 | 0 | 5 | 1
  8 | 2 | 5 | 1
 10 | 1 | 5 | 1
 12 | 0 | 5 | 1
 14 | 2 | 5 | 1
 16 | 1 | 5 | 1
 18 | 0 | 5 | 1
 20 | 2 | 5 | 1
  1 | 1 | 1 | 0
  3 | 0 | 1 | 0
  5 | 2 | 1 | 0
  7 | 1 | 1 | 0
  9 | 0 | 1 | 0
 11 | 2 | 1 | 0
 13 | 1 | 1 | 0
 15 | 0 | 1 | 0
 17 | 2 | 1 | 0
 19 | 1 | 1 | 0
  2 | 2 | 1 | 0
  4 | 1 | 1 | 0
  6 | 0 | 1 | 0
  8 | 2 | 1 | 0
 10 | 1 | 1 | 0
 12 | 0 | 1 | 0
 14 | 2 | 1 | 0
 16 | 1 | 1 | 0
 18 | 0 | 1 | 0
 20 | 2 | 1 | 0
  1 | 1 | 3 | 0
  3 | 0 | 3 | 0
  5 | 2 | 3 | 0
  7 | 1 | 3 | 0
  9 | 0 | 3 | 0
 11 | 2 | 3 | 0
 13 | 1 | 3 | 0
 15 | 0 | 3 | 0
 17 | 2 | 3 | 0
 19 | 1 | 3 | 0
  2 | 2 | 3 | 0
  4 | 1 | 3 | 0
  6 | 0 | 3 | 0
  8 | 2 | 3 | 0
 10 | 1 | 3 | 0
 12 | 0 | 3 | 0
 14 | 2 | 3 | 0
 16 | 1 | 3 | 0
 18 | 0 | 3 | 0
 20 | 2 | 3 | 0
  1 | 1 | 5 | 0
  3 | 0 | 5 | 0
  5 | 2 | 5 | 0
  7 | 1 | 5 | 0
  9 | 0 | 5 | 0
 11 | 2 | 5 | 0
 13 | 1 | 5 | 0
 15 | 0 | 5 | 0
 17 | 2 | 5 | 0
 19 | 1 | 5 | 0
  2 | 2 | 5 | 0
  4 | 1 | 5 | 0
  6 | 0 | 5 | 0
  8 | 2 | 5 | 0
 10 | 1 | 5 | 0
 12 | 0 | 5 | 0
 14 | 2 | 5 | 0
 16 | 1 | 5 | 0
 18 | 0 | 5 | 0
 20 | 2 | 5 | 0
  1 | 1 | 1 | 1
  3 | 0 | 1 | 1
  5 | 2 | 1 | 1
  7 | 1 | 1 | 1
  9 | 0 | 1 | 1
 11 | 2 | 1 | 1
 13 | 1 | 1 | 1
 15 | 0 | 1 | 1
 17 | 2 | 1 | 1
 19 | 1 | 1 | 1
  2 | 2 | 1 | 1
  4 | 1 | 1 | 1
  6 | 0 | 1 | 1
  8 | 2 | 1 | 1
 10 | 1 | 1 | 1
 12 | 0 | 1 | 1
 14 | 2 | 1 | 1
 16 | 1 | 1 | 1
 18 | 0 | 1 | 1
 20 | 2 | 1 | 1
  2 | 2 | 6 | 1
  4 | 1 | 6 | 1
  6 | 0 | 6 | 1
  8 | 2 | 6 | 1
 10 | 1 | 6 | 1
 12 | 0 | 6 | 1
 14 | 2 | 6 | 1
 16 | 1 | 6 | 1
 18 | 0 | 6 | 1
 20 | 2 | 6 | 1
  1 | 1 | 0 | 0
  3 | 0 | 0 | 0
  5 | 2 | 0 | 0
  7 | 1 | 0 | 0
  9 | 0 | 0 | 0
 11 | 2 | 0 | 0
 13 | 1 | 0 | 0
 15 | 0 | 0 | 0
 17 | 2 | 0 | 0
 19 | 1 | 0 | 0
  2 | 2 | 0 | 0
  4 | 1 | 0 | 0
  6 | 0 | 0 | 0
  8 | 2 | 0 | 0
 10 | 1 | 0 | 0
 12 | 0 | 0 | 0
 14 | 2 | 0 | 0
 16 | 1 | 0 | 0
 18 | 0 | 0 | 0
 20 | 2 | 0 | 0
  1 | 1 | 2 | 0
  3 | 0 | 2 | 0
  5 | 2 | 2 | 0
  7 | 1 | 2 | 0
  9 | 0 | 2 | 0
 11 | 2 | 2 | 0
 13 | 1 | 2 | 0
 15 | 0 | 2 | 0
 17 | 2 | 2 | 0
 19 | 1 | 2 | 0
  2 | 2 | 2 | 0
  4 | 1 | 2 | 0
  6 | 0 | 2 | 0
  8 | 2 | 2 | 0
 10 | 1 | 2 | 0
 12 | 0 | 2 | 0
 14 | 2 | 2 | 0
 16 | 1 | 2 | 0
 18 | 0 | 2 | 0
 20 | 2 | 2 | 0
(600 rows)

-- empty target list
select r.* from orca.r, orca.s where s.c=2;
 a  | b 
----+---
  2 | 2
  2 | 2
  2 | 2
  2 | 2
  2 | 2
  4 | 1
  4 | 1
  4 | 1
  4 | 1
  4 | 1
  6 | 0
  6 | 0
  6 | 0
  6 | 0
  6 | 0
  8 | 2
  8 | 2
  8 | 2
  8 | 2
  8 | 2
 10 | 1
 10 | 1
 10 | 1
 10 | 1
 10 | 1
 12 | 0
 12 | 0
 12 | 0
 12 | 0
 12 | 0
 14 | 2
 14 | 2
 14 | 2
 14 | 2
 14 | 2
 16 | 1
 16 | 1
 16 | 1
 16 | 1
 16 | 1
 18 | 0
 18 | 0
 18 | 0
 18 | 0
 18 | 0
 20 | 2
 20 | 2
 20 | 2
 20 | 2
 20 | 2
  1 | 1
  1 | 1
  1 | 1
  1 | 1
  1 | 1
  3 | 0
  3 | 0
  3 | 0
  3 | 0
  3 | 0
  5 | 2
  5 | 2
  5 | 2
  5 | 2
  5 | 2
  7 | 1
  7 | 1
  7 | 1
  7 | 1
  7 | 1
  9 | 0
  9 | 0
  9 | 0
  9 | 0
  9 | 0
 11 | 2
 11 | 2
 11 | 2
 11 | 2
 11 | 2
 13 | 1
 13 | 1
 13 | 1
 13 | 1
 13 | 1
 15 | 0
 15 | 0
 15 | 0
 15 | 0
 15 | 0
 17 | 2
 17 | 2
 17 | 2
 17 | 2
 17 | 2
 19 | 1
 19 | 1
 19 | 1
 19 | 1
 19 | 1
(100 rows)

----------------------------------------------------------------------
set optimizer=off;
create table orca.m();
NOTICE:  Table has no attributes to distribute on.
alter table orca.m add column a int;
alter table orca.m add column b int;
create table orca.m1();
NOTICE:  Table has no attributes to distribute on.
alter table orca.m1 add column a int;
alter table orca.m1 add column b int;
insert into orca.m select i-1, i%2 from generate_series(1,35) i;
insert into orca.m1 select i-2, i%3 from generate_series(1,25) i;
insert into orca.r values (null, 1);
set optimizer=on;
----------------------------------------------------------------------
-- join types
select r.a, s.c from orca.r left outer join orca.s on(r.a=s.c);
 a  | c 
----+---
  2 | 2
  2 | 2
  2 | 2
  2 | 2
  2 | 2
  4 | 4
  4 | 4
  4 | 4
  4 | 4
  6 | 6
  6 | 6
  6 | 6
  6 | 6
  8 |  
 10 |  
 12 |  
 14 |  
 16 |  
 18 |  
 20 |  
  1 | 1
  1 | 1
  1 | 1
  1 | 1
  1 | 1
  3 | 3
  3 | 3
  3 | 3
  3 | 3
  5 | 5
  5 | 5
  5 | 5
  5 | 5
  7 |  
  9 |  
 11 |  
 13 |  
 15 |  
 17 |  
 19 |  
    |  
(41 rows)

select r.a, s.c from orca.r left outer join orca.s on(r.a=s.c and r.a=r.b and s.c=s.d) order by r.a,s.c;
a  | c 
----+---
 1 | 1
 1 | 1
 1 | 1
 2 |  
 3 |  
 4 |  
 5 |  
 6 |  
 7 |  
 8 |  
 9 |  
10 |  
11 |  
12 |  
13 |  
14 |  
15 |  
16 |  
17 |  
18 |  
19 |  
20 |  
   |  
(23 rows)

select r.a, s.c from orca.r left outer join orca.s on(r.a=s.c) where s.d > 2 or s.d is null order by r.a;
a  | c 
----+---
 7 |  
 8 |  
 9 |  
10 |  
11 |  
12 |  
13 |  
14 |  
15 |  
16 |  
17 |  
18 |  
19 |  
20 |  
   |  
(15 rows)

select r.a, s.c from orca.r right outer join orca.s on(r.a=s.c);
 a | c 
---+---
 2 | 2
 4 | 4
 6 | 6
   | 0
 2 | 2
 4 | 4
 6 | 6
   | 0
 2 | 2
 4 | 4
 6 | 6
   | 0
 2 | 2
 4 | 4
 6 | 6
   | 0
 2 | 2
 1 | 1
 3 | 3
 5 | 5
 1 | 1
 3 | 3
 5 | 5
 1 | 1
 3 | 3
 5 | 5
 1 | 1
 3 | 3
 5 | 5
 1 | 1
(30 rows)

select * from orca.r where exists (select * from orca.s where s.c=r.a + 2);
 a | b 
---+---
 2 | 2
 4 | 1
 1 | 1
 3 | 0
(4 rows)

select * from orca.r where exists (select * from orca.s where s.c=r.b);
 a  | b 
----+---
  3 | 0
  5 | 2
  9 | 0
 11 | 2
 15 | 0
 17 | 2
  2 | 2
  6 | 0
  8 | 2
 12 | 0
 14 | 2
 18 | 0
 20 | 2
  1 | 1
  7 | 1
 13 | 1
 19 | 1
    | 1
  4 | 1
 10 | 1
 16 | 1
(21 rows)

select * from orca.m where m.a not in (select a from orca.m1 where a=5);
 a  | b 
----+---
  0 | 1
  1 | 0
  2 | 1
  3 | 0
  4 | 1
  6 | 1
  7 | 0
  8 | 1
  9 | 0
 10 | 1
 11 | 0
 12 | 1
 13 | 0
 14 | 1
 15 | 0
 16 | 1
 17 | 0
 18 | 1
 19 | 0
 20 | 1
 21 | 0
 22 | 1
 23 | 0
 24 | 1
 25 | 0
 26 | 1
 27 | 0
 28 | 1
 29 | 0
 30 | 1
 31 | 0
 32 | 1
 33 | 0
 34 | 1
(34 rows)

select * from orca.m where m.a not in (select a from orca.m1);
 a  | b 
----+---
 24 | 1
 25 | 0
 26 | 1
 27 | 0
 28 | 1
 29 | 0
 30 | 1
 31 | 0
 32 | 1
 33 | 0
 34 | 1
(11 rows)

select * from orca.m where m.a in (select a from orca.m1 where m1.a-1 = m.b);
 a | b 
---+---
 1 | 0
 2 | 1
(2 rows)

-- enable_hashjoin=off; enable_mergejoin=on
select 1 from orca.m, orca.m1 where m.a = m1.a and m.b!=m1.b;
 ?column? 
----------
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
(16 rows)

-- plan.qual vs hashclauses/join quals:
select * from orca.r left outer join orca.s on (r.a=s.c and r.b<s.d) where s.d is null;
 a  | b | c | d 
----+---+---+---
  1 | 1 |   |  
  5 | 2 |   |  
  7 | 1 |   |  
  9 | 0 |   |  
 11 | 2 |   |  
 13 | 1 |   |  
 15 | 0 |   |  
 17 | 2 |   |  
 19 | 1 |   |  
    | 1 |   |  
  2 | 2 |   |  
  4 | 1 |   |  
  8 | 2 |   |  
 10 | 1 |   |  
 12 | 0 |   |  
 14 | 2 |   |  
 16 | 1 |   |  
 18 | 0 |   |  
 20 | 2 |   |  
(19 rows)

-- select * from orca.r m full outer join orca.r m1 on (m.a=m1.a) where m.a is null;
-- sort
select * from orca.r join orca.s on(r.a=s.c) order by r.a, s.d;
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 | 0
 1 | 1 | 1 | 0
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 1
 2 | 2 | 2 | 1
 3 | 0 | 3 | 0
 3 | 0 | 3 | 0
 3 | 0 | 3 | 1
 3 | 0 | 3 | 1
 4 | 1 | 4 | 0
 4 | 1 | 4 | 0
 4 | 1 | 4 | 1
 4 | 1 | 4 | 1
 5 | 2 | 5 | 0
 5 | 2 | 5 | 0
 5 | 2 | 5 | 1
 5 | 2 | 5 | 1
 6 | 0 | 6 | 0
 6 | 0 | 6 | 0
 6 | 0 | 6 | 1
 6 | 0 | 6 | 1
(26 rows)

select * from orca.r join orca.s on(r.a=s.c) order by r.a, s.d limit 10;
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 | 0
 1 | 1 | 1 | 0
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 1
 2 | 2 | 2 | 1
(10 rows)

select * from orca.r join orca.s on(r.a=s.c) order by r.a + 5, s.d limit 10;
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 | 0
 1 | 1 | 1 | 0
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 0
 2 | 2 | 2 | 1
 2 | 2 | 2 | 1
(10 rows)

-- group by
select 1 from orca.m group by a+b;
 ?column? 
----------
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
        1
(18 rows)

-- join with const table
select * from orca.r where a = (select 1);
 a | b 
---+---
 1 | 1
(1 row)

-- union with const table
select * from ((select a as x from orca.r) union (select 1 as x )) as foo order by x;
 x  
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
   
(21 rows)

----------------------------------------------------------------------
set optimizer=off;
insert into orca.m values (1,-1), (1,2), (1,1);
set optimizer=on;
----------------------------------------------------------------------
-- computed columns
select a,a,a+b from orca.m;
 a  | a  | ?column? 
----+----+----------
  0 |  0 |        1
  1 |  1 |        1
  2 |  2 |        3
  3 |  3 |        3
  4 |  4 |        5
  5 |  5 |        5
  6 |  6 |        7
  7 |  7 |        7
  8 |  8 |        9
  9 |  9 |        9
 10 | 10 |       11
 11 | 11 |       11
 12 | 12 |       13
 13 | 13 |       13
 14 | 14 |       15
 15 | 15 |       15
 16 | 16 |       17
 17 | 17 |       17
 18 | 18 |       19
 19 | 19 |       19
 20 | 20 |       21
 21 | 21 |       21
 22 | 22 |       23
 23 | 23 |       23
 24 | 24 |       25
 25 | 25 |       25
 26 | 26 |       27
 27 | 27 |       27
 28 | 28 |       29
 29 | 29 |       29
 30 | 30 |       31
 31 | 31 |       31
 32 | 32 |       33
 33 | 33 |       33
 34 | 34 |       35
  1 |  1 |        0
  1 |  1 |        3
  1 |  1 |        2
(38 rows)

select a,a+b,a+b from orca.m;
 a  | ?column? | ?column? 
----+----------+----------
  0 |        1 |        1
  1 |        1 |        1
  2 |        3 |        3
  3 |        3 |        3
  4 |        5 |        5
  5 |        5 |        5
  6 |        7 |        7
  7 |        7 |        7
  8 |        9 |        9
  9 |        9 |        9
 10 |       11 |       11
 11 |       11 |       11
 12 |       13 |       13
 13 |       13 |       13
 14 |       15 |       15
 15 |       15 |       15
 16 |       17 |       17
 17 |       17 |       17
 18 |       19 |       19
 19 |       19 |       19
 20 |       21 |       21
 21 |       21 |       21
 22 |       23 |       23
 23 |       23 |       23
 24 |       25 |       25
 25 |       25 |       25
 26 |       27 |       27
 27 |       27 |       27
 28 |       29 |       29
 29 |       29 |       29
 30 |       31 |       31
 31 |       31 |       31
 32 |       33 |       33
 33 |       33 |       33
 34 |       35 |       35
  1 |        0 |        0
  1 |        3 |        3
  1 |        2 |        2
(38 rows)

-- func expr
select * from orca.m where a=abs(b);
 a | b  
---+----
 1 | -1
 1 |  1
(2 rows)

-- grouping sets
select a,b,count(*) from orca.m group by grouping sets ((a), (a,b));
 a  | b  | count 
----+----+-------
 30 |  1 |     1
  7 |  0 |     1
 19 |  0 |     1
 33 |  0 |     1
 21 |  0 |     1
  4 |  1 |     1
 32 |  1 |     1
 13 |  0 |     1
  1 |  1 |     1
 24 |  1 |     1
  8 |  1 |     1
 25 |  0 |     1
  9 |  0 |     1
 27 |  0 |     1
 12 |  1 |     1
 20 |  1 |     1
 31 |  0 |     1
 18 |  1 |     1
 14 |  1 |     1
 15 |  0 |     1
 26 |  1 |     1
 16 |  1 |     1
  5 |  0 |     1
  2 |  1 |     1
 23 |  0 |     1
 28 |  1 |     1
  1 | -1 |     1
 17 |  0 |     1
 29 |  0 |     1
  1 |  2 |     1
  0 |  1 |     1
  1 |  0 |     1
 22 |  1 |     1
 11 |  0 |     1
 34 |  1 |     1
  6 |  1 |     1
  3 |  0 |     1
 10 |  1 |     1
 20 |    |     1
 27 |    |     1
  2 |    |     1
 11 |    |     1
 12 |    |     1
  6 |    |     1
  9 |    |     1
 24 |    |     1
 17 |    |     1
 23 |    |     1
 21 |    |     1
 19 |    |     1
 33 |    |     1
 29 |    |     1
  5 |    |     1
  0 |    |     1
 32 |    |     1
 10 |    |     1
 31 |    |     1
  4 |    |     1
  3 |    |     1
 18 |    |     1
 25 |    |     1
 16 |    |     1
  1 |    |     4
  7 |    |     1
 14 |    |     1
 13 |    |     1
 34 |    |     1
 26 |    |     1
 28 |    |     1
 15 |    |     1
 30 |    |     1
 22 |    |     1
  8 |    |     1
(73 rows)

select b,count(*) from orca.m group by grouping sets ((a), (a,b));
 b  | count 
----+-------
  1 |     1
  0 |     1
  0 |     1
  0 |     1
  0 |     1
  1 |     1
  1 |     1
  0 |     1
  1 |     1
  1 |     1
  1 |     1
  0 |     1
  0 |     1
  0 |     1
  1 |     1
  1 |     1
  0 |     1
  1 |     1
  1 |     1
  0 |     1
  1 |     1
  1 |     1
  0 |     1
  1 |     1
  0 |     1
  1 |     1
 -1 |     1
  0 |     1
  0 |     1
  2 |     1
  1 |     1
  0 |     1
  1 |     1
  0 |     1
  1 |     1
  1 |     1
  0 |     1
  1 |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     4
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
    |     1
(73 rows)

select a,count(*) from orca.m group by grouping sets ((a), (a,b));
 a  | count 
----+-------
 30 |     1
  7 |     1
 19 |     1
 33 |     1
 21 |     1
  4 |     1
 32 |     1
 13 |     1
  1 |     1
 24 |     1
  8 |     1
 25 |     1
  9 |     1
 27 |     1
 12 |     1
 20 |     1
 31 |     1
 18 |     1
 14 |     1
 15 |     1
 26 |     1
 16 |     1
  5 |     1
  2 |     1
 23 |     1
 28 |     1
  1 |     1
 17 |     1
 29 |     1
  1 |     1
  0 |     1
  1 |     1
 22 |     1
 11 |     1
 34 |     1
  6 |     1
  3 |     1
 10 |     1
 20 |     1
 27 |     1
  2 |     1
 11 |     1
 12 |     1
  6 |     1
  9 |     1
 24 |     1
 17 |     1
 23 |     1
 21 |     1
 19 |     1
 33 |     1
 29 |     1
  5 |     1
  0 |     1
 32 |     1
 10 |     1
 31 |     1
  4 |     1
  3 |     1
 18 |     1
 25 |     1
 16 |     1
  1 |     4
  7 |     1
 14 |     1
 13 |     1
 34 |     1
 26 |     1
 28 |     1
 15 |     1
 30 |     1
 22 |     1
  8 |     1
(73 rows)

select a,count(*) from orca.m group by grouping sets ((a), (b));
 a  | count 
----+-------
    |     1
    |     1
    |    17
    |    19
 20 |     1
 27 |     1
  2 |     1
 11 |     1
 12 |     1
  6 |     1
  9 |     1
 24 |     1
 17 |     1
 23 |     1
 21 |     1
 19 |     1
 33 |     1
 29 |     1
  5 |     1
  0 |     1
 32 |     1
 10 |     1
 31 |     1
  4 |     1
  3 |     1
 18 |     1
 25 |     1
 16 |     1
  1 |     4
  7 |     1
 14 |     1
 13 |     1
 34 |     1
 26 |     1
 28 |     1
 15 |     1
 30 |     1
 22 |     1
  8 |     1
(39 rows)

select a,b,count(*) from orca.m group by rollup(a, b);
 a  | b  | count 
----+----+-------
 30 |  1 |     1
  7 |  0 |     1
 19 |  0 |     1
 33 |  0 |     1
 21 |  0 |     1
  4 |  1 |     1
 32 |  1 |     1
 13 |  0 |     1
  1 |  1 |     1
 24 |  1 |     1
  8 |  1 |     1
 25 |  0 |     1
  9 |  0 |     1
 27 |  0 |     1
 12 |  1 |     1
 20 |  1 |     1
 31 |  0 |     1
 18 |  1 |     1
 14 |  1 |     1
 15 |  0 |     1
 26 |  1 |     1
 16 |  1 |     1
  5 |  0 |     1
  2 |  1 |     1
 23 |  0 |     1
 28 |  1 |     1
  1 | -1 |     1
 17 |  0 |     1
 29 |  0 |     1
  1 |  2 |     1
  0 |  1 |     1
  1 |  0 |     1
 22 |  1 |     1
 11 |  0 |     1
 34 |  1 |     1
  6 |  1 |     1
  3 |  0 |     1
 10 |  1 |     1
 20 |    |     1
 27 |    |     1
  2 |    |     1
 11 |    |     1
 12 |    |     1
  6 |    |     1
  9 |    |     1
 24 |    |     1
 17 |    |     1
 23 |    |     1
 21 |    |     1
 19 |    |     1
 33 |    |     1
 29 |    |     1
  5 |    |     1
  0 |    |     1
 32 |    |     1
 10 |    |     1
 31 |    |     1
  4 |    |     1
  3 |    |     1
 18 |    |     1
 25 |    |     1
 16 |    |     1
  1 |    |     4
  7 |    |     1
 14 |    |     1
 13 |    |     1
 34 |    |     1
 26 |    |     1
 28 |    |     1
 15 |    |     1
 30 |    |     1
 22 |    |     1
  8 |    |     1
    |    |    38
(74 rows)

select a,b,count(*) from orca.m group by rollup((a),(a,b)) order by 1,2,3;
a  | b  | count 
----+----+-------
 0 |  1 |     1
 0 |    |     1
 1 | -1 |     1
 1 |  0 |     1
 1 |  1 |     1
 1 |  2 |     1
 1 |    |     4
 2 |  1 |     1
 2 |    |     1
 3 |  0 |     1
 3 |    |     1
 4 |  1 |     1
 4 |    |     1
 5 |  0 |     1
 5 |    |     1
 6 |  1 |     1
 6 |    |     1
 7 |  0 |     1
 7 |    |     1
 8 |  1 |     1
 8 |    |     1
 9 |  0 |     1
 9 |    |     1
10 |  1 |     1
10 |    |     1
11 |  0 |     1
11 |    |     1
12 |  1 |     1
12 |    |     1
13 |  0 |     1
13 |    |     1
14 |  1 |     1
14 |    |     1
15 |  0 |     1
15 |    |     1
16 |  1 |     1
16 |    |     1
17 |  0 |     1
17 |    |     1
18 |  1 |     1
18 |    |     1
19 |  0 |     1
19 |    |     1
20 |  1 |     1
20 |    |     1
21 |  0 |     1
21 |    |     1
22 |  1 |     1
22 |    |     1
23 |  0 |     1
23 |    |     1
24 |  1 |     1
24 |    |     1
25 |  0 |     1
25 |    |     1
26 |  1 |     1
26 |    |     1
27 |  0 |     1
27 |    |     1
28 |  1 |     1
28 |    |     1
29 |  0 |     1
29 |    |     1
30 |  1 |     1
30 |    |     1
31 |  0 |     1
31 |    |     1
32 |  1 |     1
32 |    |     1
33 |  0 |     1
33 |    |     1
34 |  1 |     1
34 |    |     1
   |    |    38
(74 rows)

select count(*) from orca.m group by ();
 count 
-------
    38
(1 row)

select a, count(*) from orca.r group by (), a;
 a  | count 
----+-------
  2 |     1
  4 |     1
  6 |     1
  8 |     1
 10 |     1
 12 |     1
 14 |     1
 16 |     1
 18 |     1
 20 |     1
  1 |     1
  3 |     1
  5 |     1
  7 |     1
  9 |     1
 11 |     1
 13 |     1
 15 |     1
 17 |     1
 19 |     1
    |     1
(21 rows)

select a, count(*) from orca.r group by grouping sets ((),(a));
 a  | count 
----+-------
  2 |     1
  4 |     1
  6 |     1
  8 |     1
 10 |     1
 12 |     1
 14 |     1
 16 |     1
 18 |     1
 20 |     1
  1 |     1
  3 |     1
  5 |     1
  7 |     1
  9 |     1
 11 |     1
 13 |     1
 15 |     1
 17 |     1
 19 |     1
    |     1
    |    21
(22 rows)

select a, b, count(*) c from orca.r group by grouping sets ((),(a), (a,b)) order by b,a,c;
 a  | b | c  
----+---+----
  3 | 0 |  1
  6 | 0 |  1
  9 | 0 |  1
 12 | 0 |  1
 15 | 0 |  1
 18 | 0 |  1
  1 | 1 |  1
  4 | 1 |  1
  7 | 1 |  1
 10 | 1 |  1
 13 | 1 |  1
 16 | 1 |  1
 19 | 1 |  1
    | 1 |  1
  2 | 2 |  1
  5 | 2 |  1
  8 | 2 |  1
 11 | 2 |  1
 14 | 2 |  1
 17 | 2 |  1
 20 | 2 |  1
  1 |   |  1
  2 |   |  1
  3 |   |  1
  4 |   |  1
  5 |   |  1
  6 |   |  1
  7 |   |  1
  8 |   |  1
  9 |   |  1
 10 |   |  1
 11 |   |  1
 12 |   |  1
 13 |   |  1
 14 |   |  1
 15 |   |  1
 16 |   |  1
 17 |   |  1
 18 |   |  1
 19 |   |  1
 20 |   |  1
    |   |  1
    |   | 21
(43 rows)

select a, count(*) c from orca.r group by grouping sets ((),(a), (a,b)) order by b,a,c;
 a  | c  
----+----
  3 |  1
  6 |  1
  9 |  1
 12 |  1
 15 |  1
 18 |  1
  1 |  1
  4 |  1
  7 |  1
 10 |  1
 13 |  1
 16 |  1
 19 |  1
    |  1
  2 |  1
  5 |  1
  8 |  1
 11 |  1
 14 |  1
 17 |  1
 20 |  1
  1 |  1
  2 |  1
  3 |  1
  4 |  1
  5 |  1
  6 |  1
  7 |  1
  8 |  1
  9 |  1
 10 |  1
 11 |  1
 12 |  1
 13 |  1
 14 |  1
 15 |  1
 16 |  1
 17 |  1
 18 |  1
 19 |  1
 20 |  1
    |  1
    | 21
(43 rows)

select 1 from orca.r group by ();
 ?column? 
----------
        1
(1 row)

select a,1 from orca.r group by rollup(a);
 a  | ?column? 
----+----------
  2 |        1
  4 |        1
  6 |        1
  8 |        1
 10 |        1
 12 |        1
 14 |        1
 16 |        1
 18 |        1
 20 |        1
  1 |        1
  3 |        1
  5 |        1
  7 |        1
  9 |        1
 11 |        1
 13 |        1
 15 |        1
 17 |        1
 19 |        1
    |        1
    |        1
(22 rows)

-- arrays
select array[array[a,b]], array[b] from orca.r;
   array    | array 
------------+-------
 {{2,2}}    | {2}
 {{4,1}}    | {1}
 {{6,0}}    | {0}
 {{8,2}}    | {2}
 {{10,1}}   | {1}
 {{12,0}}   | {0}
 {{14,2}}   | {2}
 {{16,1}}   | {1}
 {{18,0}}   | {0}
 {{20,2}}   | {2}
 {{1,1}}    | {1}
 {{3,0}}    | {0}
 {{5,2}}    | {2}
 {{7,1}}    | {1}
 {{9,0}}    | {0}
 {{11,2}}   | {2}
 {{13,1}}   | {1}
 {{15,0}}   | {0}
 {{17,2}}   | {2}
 {{19,1}}   | {1}
 {{NULL,1}} | {1}
(21 rows)

-- setops
select a, b from m union select b,a from orca.m;
ERROR:  relation "m" does not exist
SELECT a from m UNION ALL select b from orca.m UNION ALL select a+b from orca.m group by 1;
ERROR:  relation "m" does not exist
----------------------------------------------------------------------
set optimizer=off;
drop table if exists orca.foo;
create table orca.foo(a int, b int, c int, d int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
drop table if exists orca.bar;
NOTICE:  table "bar" does not exist, skipping
create table orca.bar(a int, b int, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.foo select i, i%2, i%4, i-1 from generate_series(1,40)i;
insert into orca.bar select i, i%3, i%2 from generate_series(1,30)i;
set optimizer=on;
----------------------------------------------------------------------
--- distinct operation
SELECT distinct a, b from orca.foo;
 a  | b 
----+---
  1 | 1
  2 | 0
  3 | 1
  4 | 0
  5 | 1
  6 | 0
  7 | 1
  8 | 0
  9 | 1
 10 | 0
 11 | 1
 12 | 0
 13 | 1
 14 | 0
 15 | 1
 16 | 0
 17 | 1
 18 | 0
 19 | 1
 20 | 0
 21 | 1
 22 | 0
 23 | 1
 24 | 0
 25 | 1
 26 | 0
 27 | 1
 28 | 0
 29 | 1
 30 | 0
 31 | 1
 32 | 0
 33 | 1
 34 | 0
 35 | 1
 36 | 0
 37 | 1
 38 | 0
 39 | 1
 40 | 0
(40 rows)

SELECT distinct foo.a, bar.b from orca.foo, orca.bar where foo.b = bar.a;
 a  | b 
----+---
  1 | 1
  3 | 1
  5 | 1
  7 | 1
  9 | 1
 11 | 1
 13 | 1
 15 | 1
 17 | 1
 19 | 1
 21 | 1
 23 | 1
 25 | 1
 27 | 1
 29 | 1
 31 | 1
 33 | 1
 35 | 1
 37 | 1
 39 | 1
(20 rows)

SELECT distinct a, b from orca.foo;
 a  | b 
----+---
  1 | 1
  2 | 0
  3 | 1
  4 | 0
  5 | 1
  6 | 0
  7 | 1
  8 | 0
  9 | 1
 10 | 0
 11 | 1
 12 | 0
 13 | 1
 14 | 0
 15 | 1
 16 | 0
 17 | 1
 18 | 0
 19 | 1
 20 | 0
 21 | 1
 22 | 0
 23 | 1
 24 | 0
 25 | 1
 26 | 0
 27 | 1
 28 | 0
 29 | 1
 30 | 0
 31 | 1
 32 | 0
 33 | 1
 34 | 0
 35 | 1
 36 | 0
 37 | 1
 38 | 0
 39 | 1
 40 | 0
(40 rows)

SELECT distinct a, count(*) from orca.foo group by a;
 a  | count 
----+-------
  1 |     1
  2 |     1
  3 |     1
  4 |     1
  5 |     1
  6 |     1
  7 |     1
  8 |     1
  9 |     1
 10 |     1
 11 |     1
 12 |     1
 13 |     1
 14 |     1
 15 |     1
 16 |     1
 17 |     1
 18 |     1
 19 |     1
 20 |     1
 21 |     1
 22 |     1
 23 |     1
 24 |     1
 25 |     1
 26 |     1
 27 |     1
 28 |     1
 29 |     1
 30 |     1
 31 |     1
 32 |     1
 33 |     1
 34 |     1
 35 |     1
 36 |     1
 37 |     1
 38 |     1
 39 |     1
 40 |     1
(40 rows)

SELECT distinct foo.a, bar.b, sum(bar.c+foo.c) from orca.foo, orca.bar where foo.b = bar.a group by foo.a, bar.b;
 a  | b | sum 
----+---+-----
  1 | 1 |   2
  3 | 1 |   4
  5 | 1 |   2
  7 | 1 |   4
  9 | 1 |   2
 11 | 1 |   4
 13 | 1 |   2
 15 | 1 |   4
 17 | 1 |   2
 19 | 1 |   4
 21 | 1 |   2
 23 | 1 |   4
 25 | 1 |   2
 27 | 1 |   4
 29 | 1 |   2
 31 | 1 |   4
 33 | 1 |   2
 35 | 1 |   4
 37 | 1 |   2
 39 | 1 |   4
(20 rows)

SELECT distinct a, count(*) from orca.foo group by a;
 a  | count 
----+-------
  1 |     1
  2 |     1
  3 |     1
  4 |     1
  5 |     1
  6 |     1
  7 |     1
  8 |     1
  9 |     1
 10 |     1
 11 |     1
 12 |     1
 13 |     1
 14 |     1
 15 |     1
 16 |     1
 17 |     1
 18 |     1
 19 |     1
 20 |     1
 21 |     1
 22 |     1
 23 |     1
 24 |     1
 25 |     1
 26 |     1
 27 |     1
 28 |     1
 29 |     1
 30 |     1
 31 |     1
 32 |     1
 33 |     1
 34 |     1
 35 |     1
 36 |     1
 37 |     1
 38 |     1
 39 |     1
 40 |     1
(40 rows)

SELECT distinct foo.a, bar.b from orca.foo, orca.bar where foo.b = bar.a;
 a  | b 
----+---
  1 | 1
  3 | 1
  5 | 1
  7 | 1
  9 | 1
 11 | 1
 13 | 1
 15 | 1
 17 | 1
 19 | 1
 21 | 1
 23 | 1
 25 | 1
 27 | 1
 29 | 1
 31 | 1
 33 | 1
 35 | 1
 37 | 1
 39 | 1
(20 rows)

SELECT distinct foo.a, bar.b, sum(bar.c+foo.c) from orca.foo, orca.bar where foo.b = bar.a group by foo.a, bar.b;
 a  | b | sum 
----+---+-----
  1 | 1 |   2
  3 | 1 |   4
  5 | 1 |   2
  7 | 1 |   4
  9 | 1 |   2
 11 | 1 |   4
 13 | 1 |   2
 15 | 1 |   4
 17 | 1 |   2
 19 | 1 |   4
 21 | 1 |   2
 23 | 1 |   4
 25 | 1 |   2
 27 | 1 |   4
 29 | 1 |   2
 31 | 1 |   4
 33 | 1 |   2
 35 | 1 |   4
 37 | 1 |   2
 39 | 1 |   4
(20 rows)

SELECT distinct a, b from orca.foo;
 a  | b 
----+---
  1 | 1
  2 | 0
  3 | 1
  4 | 0
  5 | 1
  6 | 0
  7 | 1
  8 | 0
  9 | 1
 10 | 0
 11 | 1
 12 | 0
 13 | 1
 14 | 0
 15 | 1
 16 | 0
 17 | 1
 18 | 0
 19 | 1
 20 | 0
 21 | 1
 22 | 0
 23 | 1
 24 | 0
 25 | 1
 26 | 0
 27 | 1
 28 | 0
 29 | 1
 30 | 0
 31 | 1
 32 | 0
 33 | 1
 34 | 0
 35 | 1
 36 | 0
 37 | 1
 38 | 0
 39 | 1
 40 | 0
(40 rows)

SELECT distinct a, count(*) from orca.foo group by a;
 a  | count 
----+-------
  1 |     1
  2 |     1
  3 |     1
  4 |     1
  5 |     1
  6 |     1
  7 |     1
  8 |     1
  9 |     1
 10 |     1
 11 |     1
 12 |     1
 13 |     1
 14 |     1
 15 |     1
 16 |     1
 17 |     1
 18 |     1
 19 |     1
 20 |     1
 21 |     1
 22 |     1
 23 |     1
 24 |     1
 25 |     1
 26 |     1
 27 |     1
 28 |     1
 29 |     1
 30 |     1
 31 |     1
 32 |     1
 33 |     1
 34 |     1
 35 |     1
 36 |     1
 37 |     1
 38 |     1
 39 |     1
 40 |     1
(40 rows)

SELECT distinct foo.a, bar.b from orca.foo, orca.bar where foo.b = bar.a;
 a  | b 
----+---
  1 | 1
  3 | 1
  5 | 1
  7 | 1
  9 | 1
 11 | 1
 13 | 1
 15 | 1
 17 | 1
 19 | 1
 21 | 1
 23 | 1
 25 | 1
 27 | 1
 29 | 1
 31 | 1
 33 | 1
 35 | 1
 37 | 1
 39 | 1
(20 rows)

SELECT distinct foo.a, bar.b, sum(bar.c+foo.c) from orca.foo, orca.bar where foo.b = bar.a group by foo.a, bar.b;
 a  | b | sum 
----+---+-----
  1 | 1 |   2
  3 | 1 |   4
  5 | 1 |   2
  7 | 1 |   4
  9 | 1 |   2
 11 | 1 |   4
 13 | 1 |   2
 15 | 1 |   4
 17 | 1 |   2
 19 | 1 |   4
 21 | 1 |   2
 23 | 1 |   4
 25 | 1 |   2
 27 | 1 |   4
 29 | 1 |   2
 31 | 1 |   4
 33 | 1 |   2
 35 | 1 |   4
 37 | 1 |   2
 39 | 1 |   4
(20 rows)

--- window operations
select row_number() over() from orca.foo order by 1;
 row_number 
------------
          1
          2
          3
          4
          5
          6
          7
          8
          9
         10
         11
         12
         13
         14
         15
         16
         17
         18
         19
         20
         21
         22
         23
         24
         25
         26
         27
         28
         29
         30
         31
         32
         33
         34
         35
         36
         37
         38
         39
         40
(40 rows)

select rank() over(partition by b order by count(*)/sum(a)) from orca.foo group by a, b order by 1;
 rank 
------
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
    1
   20
(40 rows)

select row_number() over(order by foo.a) from orca.foo inner join orca.bar using(b) group by foo.a, bar.b, bar.a;
 row_number 
------------
          1
          2
          3
          4
          5
          6
          7
          8
          9
         10
         11
         12
         13
         14
         15
         16
         17
         18
         19
         20
         21
         22
         23
         24
         25
         26
         27
         28
         29
         30
         31
         32
         33
         34
         35
         36
         37
         38
         39
         40
         41
         42
         43
         44
         45
         46
         47
         48
         49
         50
         51
         52
         53
         54
         55
         56
         57
         58
         59
         60
         61
         62
         63
         64
         65
         66
         67
         68
         69
         70
         71
         72
         73
         74
         75
         76
         77
         78
         79
         80
         81
         82
         83
         84
         85
         86
         87
         88
         89
         90
         91
         92
         93
         94
         95
         96
         97
         98
         99
        100
        101
        102
        103
        104
        105
        106
        107
        108
        109
        110
        111
        112
        113
        114
        115
        116
        117
        118
        119
        120
        121
        122
        123
        124
        125
        126
        127
        128
        129
        130
        131
        132
        133
        134
        135
        136
        137
        138
        139
        140
        141
        142
        143
        144
        145
        146
        147
        148
        149
        150
        151
        152
        153
        154
        155
        156
        157
        158
        159
        160
        161
        162
        163
        164
        165
        166
        167
        168
        169
        170
        171
        172
        173
        174
        175
        176
        177
        178
        179
        180
        181
        182
        183
        184
        185
        186
        187
        188
        189
        190
        191
        192
        193
        194
        195
        196
        197
        198
        199
        200
        201
        202
        203
        204
        205
        206
        207
        208
        209
        210
        211
        212
        213
        214
        215
        216
        217
        218
        219
        220
        221
        222
        223
        224
        225
        226
        227
        228
        229
        230
        231
        232
        233
        234
        235
        236
        237
        238
        239
        240
        241
        242
        243
        244
        245
        246
        247
        248
        249
        250
        251
        252
        253
        254
        255
        256
        257
        258
        259
        260
        261
        262
        263
        264
        265
        266
        267
        268
        269
        270
        271
        272
        273
        274
        275
        276
        277
        278
        279
        280
        281
        282
        283
        284
        285
        286
        287
        288
        289
        290
        291
        292
        293
        294
        295
        296
        297
        298
        299
        300
        301
        302
        303
        304
        305
        306
        307
        308
        309
        310
        311
        312
        313
        314
        315
        316
        317
        318
        319
        320
        321
        322
        323
        324
        325
        326
        327
        328
        329
        330
        331
        332
        333
        334
        335
        336
        337
        338
        339
        340
        341
        342
        343
        344
        345
        346
        347
        348
        349
        350
        351
        352
        353
        354
        355
        356
        357
        358
        359
        360
        361
        362
        363
        364
        365
        366
        367
        368
        369
        370
        371
        372
        373
        374
        375
        376
        377
        378
        379
        380
        381
        382
        383
        384
        385
        386
        387
        388
        389
        390
        391
        392
        393
        394
        395
        396
        397
        398
        399
        400
(400 rows)

select 1+row_number() over(order by foo.a+bar.a) from orca.foo inner join orca.bar using(b);
 ?column? 
----------
        2
        3
        4
        5
        6
        7
        8
        9
       10
       11
       12
       13
       14
       15
       16
       17
       18
       19
       20
       21
       22
       23
       24
       25
       26
       27
       28
       29
       30
       31
       32
       33
       34
       35
       36
       37
       38
       39
       40
       41
       42
       43
       44
       45
       46
       47
       48
       49
       50
       51
       52
       53
       54
       55
       56
       57
       58
       59
       60
       61
       62
       63
       64
       65
       66
       67
       68
       69
       70
       71
       72
       73
       74
       75
       76
       77
       78
       79
       80
       81
       82
       83
       84
       85
       86
       87
       88
       89
       90
       91
       92
       93
       94
       95
       96
       97
       98
       99
      100
      101
      102
      103
      104
      105
      106
      107
      108
      109
      110
      111
      112
      113
      114
      115
      116
      117
      118
      119
      120
      121
      122
      123
      124
      125
      126
      127
      128
      129
      130
      131
      132
      133
      134
      135
      136
      137
      138
      139
      140
      141
      142
      143
      144
      145
      146
      147
      148
      149
      150
      151
      152
      153
      154
      155
      156
      157
      158
      159
      160
      161
      162
      163
      164
      165
      166
      167
      168
      169
      170
      171
      172
      173
      174
      175
      176
      177
      178
      179
      180
      181
      182
      183
      184
      185
      186
      187
      188
      189
      190
      191
      192
      193
      194
      195
      196
      197
      198
      199
      200
      201
      202
      203
      204
      205
      206
      207
      208
      209
      210
      211
      212
      213
      214
      215
      216
      217
      218
      219
      220
      221
      222
      223
      224
      225
      226
      227
      228
      229
      230
      231
      232
      233
      234
      235
      236
      237
      238
      239
      240
      241
      242
      243
      244
      245
      246
      247
      248
      249
      250
      251
      252
      253
      254
      255
      256
      257
      258
      259
      260
      261
      262
      263
      264
      265
      266
      267
      268
      269
      270
      271
      272
      273
      274
      275
      276
      277
      278
      279
      280
      281
      282
      283
      284
      285
      286
      287
      288
      289
      290
      291
      292
      293
      294
      295
      296
      297
      298
      299
      300
      301
      302
      303
      304
      305
      306
      307
      308
      309
      310
      311
      312
      313
      314
      315
      316
      317
      318
      319
      320
      321
      322
      323
      324
      325
      326
      327
      328
      329
      330
      331
      332
      333
      334
      335
      336
      337
      338
      339
      340
      341
      342
      343
      344
      345
      346
      347
      348
      349
      350
      351
      352
      353
      354
      355
      356
      357
      358
      359
      360
      361
      362
      363
      364
      365
      366
      367
      368
      369
      370
      371
      372
      373
      374
      375
      376
      377
      378
      379
      380
      381
      382
      383
      384
      385
      386
      387
      388
      389
      390
      391
      392
      393
      394
      395
      396
      397
      398
      399
      400
      401
(400 rows)

select row_number() over(order by foo.a+ bar.a)/count(*) from orca.foo inner join orca.bar using(b) group by foo.a, bar.a, bar.b;
 ?column? 
----------
        1
        2
        3
        4
        5
        6
        7
        8
        9
       10
       11
       12
       13
       14
       15
       16
       17
       18
       19
       20
       21
       22
       23
       24
       25
       26
       27
       28
       29
       30
       31
       32
       33
       34
       35
       36
       37
       38
       39
       40
       41
       42
       43
       44
       45
       46
       47
       48
       49
       50
       51
       52
       53
       54
       55
       56
       57
       58
       59
       60
       61
       62
       63
       64
       65
       66
       67
       68
       69
       70
       71
       72
       73
       74
       75
       76
       77
       78
       79
       80
       81
       82
       83
       84
       85
       86
       87
       88
       89
       90
       91
       92
       93
       94
       95
       96
       97
       98
       99
      100
      101
      102
      103
      104
      105
      106
      107
      108
      109
      110
      111
      112
      113
      114
      115
      116
      117
      118
      119
      120
      121
      122
      123
      124
      125
      126
      127
      128
      129
      130
      131
      132
      133
      134
      135
      136
      137
      138
      139
      140
      141
      142
      143
      144
      145
      146
      147
      148
      149
      150
      151
      152
      153
      154
      155
      156
      157
      158
      159
      160
      161
      162
      163
      164
      165
      166
      167
      168
      169
      170
      171
      172
      173
      174
      175
      176
      177
      178
      179
      180
      181
      182
      183
      184
      185
      186
      187
      188
      189
      190
      191
      192
      193
      194
      195
      196
      197
      198
      199
      200
      201
      202
      203
      204
      205
      206
      207
      208
      209
      210
      211
      212
      213
      214
      215
      216
      217
      218
      219
      220
      221
      222
      223
      224
      225
      226
      227
      228
      229
      230
      231
      232
      233
      234
      235
      236
      237
      238
      239
      240
      241
      242
      243
      244
      245
      246
      247
      248
      249
      250
      251
      252
      253
      254
      255
      256
      257
      258
      259
      260
      261
      262
      263
      264
      265
      266
      267
      268
      269
      270
      271
      272
      273
      274
      275
      276
      277
      278
      279
      280
      281
      282
      283
      284
      285
      286
      287
      288
      289
      290
      291
      292
      293
      294
      295
      296
      297
      298
      299
      300
      301
      302
      303
      304
      305
      306
      307
      308
      309
      310
      311
      312
      313
      314
      315
      316
      317
      318
      319
      320
      321
      322
      323
      324
      325
      326
      327
      328
      329
      330
      331
      332
      333
      334
      335
      336
      337
      338
      339
      340
      341
      342
      343
      344
      345
      346
      347
      348
      349
      350
      351
      352
      353
      354
      355
      356
      357
      358
      359
      360
      361
      362
      363
      364
      365
      366
      367
      368
      369
      370
      371
      372
      373
      374
      375
      376
      377
      378
      379
      380
      381
      382
      383
      384
      385
      386
      387
      388
      389
      390
      391
      392
      393
      394
      395
      396
      397
      398
      399
      400
(400 rows)

select count(*) over(partition by b order by a range between 1 preceding and (select count(*) from orca.bar) following) from orca.foo;
 count 
-------
    16
    16
    16
    16
    16
    15
    14
    13
    12
    11
    10
     9
     8
     7
     6
     5
     4
     3
     2
     1
    16
    16
    16
    16
    16
    15
    14
    13
    12
    11
    10
     9
     8
     7
     6
     5
     4
     3
     2
     1
(40 rows)

select a+1, rank() over(partition by b+1 order by a+1) from orca.foo order by 1, 2;
 ?column? | rank 
----------+------
        2 |    1
        3 |    1
        4 |    2
        5 |    2
        6 |    3
        7 |    3
        8 |    4
        9 |    4
       10 |    5
       11 |    5
       12 |    6
       13 |    6
       14 |    7
       15 |    7
       16 |    8
       17 |    8
       18 |    9
       19 |    9
       20 |   10
       21 |   10
       22 |   11
       23 |   11
       24 |   12
       25 |   12
       26 |   13
       27 |   13
       28 |   14
       29 |   14
       30 |   15
       31 |   15
       32 |   16
       33 |   16
       34 |   17
       35 |   17
       36 |   18
       37 |   18
       38 |   19
       39 |   19
       40 |   20
       41 |   20
(40 rows)

select a , sum(a) over (order by a range '1'::float8 preceding) from orca.r order by 1,2;
a  | sum 
----+-----
 1 |   1
 2 |   3
 3 |   5
 4 |   7
 5 |   9
 6 |  11
 7 |  13
 8 |  15
 9 |  17
10 |  19
11 |  21
12 |  23
13 |  25
14 |  27
15 |  29
16 |  31
17 |  33
18 |  35
19 |  37
20 |  39
   |    
(21 rows)

select a, b, floor(avg(b) over(order by a desc, b desc rows between unbounded preceding and unbounded following)) as avg, dense_rank() over (order by a) from orca.r order by 1,2,3,4;
a  | b | avg | dense_rank 
----+---+-----+------------
 1 | 1 |   1 |          1
 2 | 2 |   1 |          2
 3 | 0 |   1 |          3
 4 | 1 |   1 |          4
 5 | 2 |   1 |          5
 6 | 0 |   1 |          6
 7 | 1 |   1 |          7
 8 | 2 |   1 |          8
 9 | 0 |   1 |          9
10 | 1 |   1 |         10
11 | 2 |   1 |         11
12 | 0 |   1 |         12
13 | 1 |   1 |         13
14 | 2 |   1 |         14
15 | 0 |   1 |         15
16 | 1 |   1 |         16
17 | 2 |   1 |         17
18 | 0 |   1 |         18
19 | 1 |   1 |         19
20 | 2 |   1 |         20
   | 1 |   1 |         21
(21 rows)

select lead(a) over(order by a) from orca.r order by 1;
lead 
------
   2
   3
   4
   5
   6
   7
   8
   9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
    
    
(21 rows)

select lag(c,d) over(order by c,d) from orca.s order by 1;
lag 
-----
  0
  0
  0
  0
  1
  1
  1
  1
  1
  2
  2
  2
  2
  2
  3
  3
  3
  3
  4
  4
  4
  4
  5
  5
  5
  5
  6
  6
  6
  6
(30 rows)

select lead(c,c+d,1000) over(order by c,d) from orca.s order by 1;
lead 
------
   0
   0
   0
   1
   1
   1
   1
   2
   2
   2
   2
   2
   3
   3
   3
   4
   4
   4
   5
   5
   5
   6
   6
   6
1000
1000
1000
1000
1000
1000
(30 rows)

--- cte
with x as (select a, b from orca.r)
select rank() over(partition by a, case when b = 0 then a+b end order by b asc) as rank_within_parent from x order by a desc ,case when a+b = 0 then a end ,b;
 rank_within_parent 
--------------------
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
                  1
(21 rows)

----------------------------------------------------------------------
set optimizer=off;
drop table if exists orca.rcte;
NOTICE:  table "rcte" does not exist, skipping
create table orca.rcte(a int, b int, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.rcte select i, i%2, i%3 from generate_series(1,40)i;
-- select disable_xform('CXformInlineCTEConsumer');
set optimizer=on;
----------------------------------------------------------------------
with x as (select * from orca.rcte where a < 10) select * from x x1, x x2;
 a | b | c | a | b | c 
---+---+---+---+---+---
 2 | 0 | 2 | 2 | 0 | 2
 4 | 0 | 1 | 2 | 0 | 2
 6 | 0 | 0 | 2 | 0 | 2
 8 | 0 | 2 | 2 | 0 | 2
 1 | 1 | 1 | 2 | 0 | 2
 3 | 1 | 0 | 2 | 0 | 2
 5 | 1 | 2 | 2 | 0 | 2
 7 | 1 | 1 | 2 | 0 | 2
 9 | 1 | 0 | 2 | 0 | 2
 2 | 0 | 2 | 4 | 0 | 1
 4 | 0 | 1 | 4 | 0 | 1
 6 | 0 | 0 | 4 | 0 | 1
 8 | 0 | 2 | 4 | 0 | 1
 1 | 1 | 1 | 4 | 0 | 1
 3 | 1 | 0 | 4 | 0 | 1
 5 | 1 | 2 | 4 | 0 | 1
 7 | 1 | 1 | 4 | 0 | 1
 9 | 1 | 0 | 4 | 0 | 1
 2 | 0 | 2 | 6 | 0 | 0
 4 | 0 | 1 | 6 | 0 | 0
 6 | 0 | 0 | 6 | 0 | 0
 8 | 0 | 2 | 6 | 0 | 0
 1 | 1 | 1 | 6 | 0 | 0
 3 | 1 | 0 | 6 | 0 | 0
 5 | 1 | 2 | 6 | 0 | 0
 7 | 1 | 1 | 6 | 0 | 0
 9 | 1 | 0 | 6 | 0 | 0
 2 | 0 | 2 | 8 | 0 | 2
 4 | 0 | 1 | 8 | 0 | 2
 6 | 0 | 0 | 8 | 0 | 2
 8 | 0 | 2 | 8 | 0 | 2
 1 | 1 | 1 | 8 | 0 | 2
 3 | 1 | 0 | 8 | 0 | 2
 5 | 1 | 2 | 8 | 0 | 2
 7 | 1 | 1 | 8 | 0 | 2
 9 | 1 | 0 | 8 | 0 | 2
 1 | 1 | 1 | 1 | 1 | 1
 3 | 1 | 0 | 1 | 1 | 1
 5 | 1 | 2 | 1 | 1 | 1
 7 | 1 | 1 | 1 | 1 | 1
 9 | 1 | 0 | 1 | 1 | 1
 2 | 0 | 2 | 1 | 1 | 1
 4 | 0 | 1 | 1 | 1 | 1
 6 | 0 | 0 | 1 | 1 | 1
 8 | 0 | 2 | 1 | 1 | 1
 1 | 1 | 1 | 3 | 1 | 0
 3 | 1 | 0 | 3 | 1 | 0
 5 | 1 | 2 | 3 | 1 | 0
 7 | 1 | 1 | 3 | 1 | 0
 9 | 1 | 0 | 3 | 1 | 0
 2 | 0 | 2 | 3 | 1 | 0
 4 | 0 | 1 | 3 | 1 | 0
 6 | 0 | 0 | 3 | 1 | 0
 8 | 0 | 2 | 3 | 1 | 0
 1 | 1 | 1 | 5 | 1 | 2
 3 | 1 | 0 | 5 | 1 | 2
 5 | 1 | 2 | 5 | 1 | 2
 7 | 1 | 1 | 5 | 1 | 2
 9 | 1 | 0 | 5 | 1 | 2
 2 | 0 | 2 | 5 | 1 | 2
 4 | 0 | 1 | 5 | 1 | 2
 6 | 0 | 0 | 5 | 1 | 2
 8 | 0 | 2 | 5 | 1 | 2
 1 | 1 | 1 | 7 | 1 | 1
 3 | 1 | 0 | 7 | 1 | 1
 5 | 1 | 2 | 7 | 1 | 1
 7 | 1 | 1 | 7 | 1 | 1
 9 | 1 | 0 | 7 | 1 | 1
 2 | 0 | 2 | 7 | 1 | 1
 4 | 0 | 1 | 7 | 1 | 1
 6 | 0 | 0 | 7 | 1 | 1
 8 | 0 | 2 | 7 | 1 | 1
 1 | 1 | 1 | 9 | 1 | 0
 3 | 1 | 0 | 9 | 1 | 0
 5 | 1 | 2 | 9 | 1 | 0
 7 | 1 | 1 | 9 | 1 | 0
 9 | 1 | 0 | 9 | 1 | 0
 2 | 0 | 2 | 9 | 1 | 0
 4 | 0 | 1 | 9 | 1 | 0
 6 | 0 | 0 | 9 | 1 | 0
 8 | 0 | 2 | 9 | 1 | 0
(81 rows)

with x as (select * from orca.rcte where a < 10) select * from x x1, x x2 where x2.a = x1.b;
 a | b | c | a | b | c 
---+---+---+---+---+---
 9 | 1 | 0 | 1 | 1 | 1
 7 | 1 | 1 | 1 | 1 | 1
 5 | 1 | 2 | 1 | 1 | 1
 3 | 1 | 0 | 1 | 1 | 1
 1 | 1 | 1 | 1 | 1 | 1
(5 rows)

with x as (select * from orca.rcte where a < 10) select a from x union all select b from x;
 a 
---
 2
 4
 6
 8
 0
 0
 0
 0
 1
 3
 5
 7
 9
 1
 1
 1
 1
 1
(18 rows)

with x as (select * from orca.rcte where a < 10) select * from x x1 where x1.b = any (select x2.a from x x2 group by x2.a);
 a | b | c 
---+---+---
 9 | 1 | 0
 7 | 1 | 1
 5 | 1 | 2
 3 | 1 | 0
 1 | 1 | 1
(5 rows)

with x as (select * from orca.rcte where a < 10) select * from x x1 where x1.b = all (select x2.a from x x2 group by x2.a);
 a | b | c 
---+---+---
(0 rows)

with x as (select * from orca.rcte where a < 10) select * from x x1, x x2, x x3 where x2.a = x1.b and x3.b = x2.b                                                                                   ;
 a | b | c | a | b | c | a | b | c 
---+---+---+---+---+---+---+---+---
 9 | 1 | 0 | 1 | 1 | 1 | 9 | 1 | 0
 7 | 1 | 1 | 1 | 1 | 1 | 9 | 1 | 0
 5 | 1 | 2 | 1 | 1 | 1 | 9 | 1 | 0
 3 | 1 | 0 | 1 | 1 | 1 | 9 | 1 | 0
 1 | 1 | 1 | 1 | 1 | 1 | 9 | 1 | 0
 9 | 1 | 0 | 1 | 1 | 1 | 7 | 1 | 1
 7 | 1 | 1 | 1 | 1 | 1 | 7 | 1 | 1
 5 | 1 | 2 | 1 | 1 | 1 | 7 | 1 | 1
 3 | 1 | 0 | 1 | 1 | 1 | 7 | 1 | 1
 1 | 1 | 1 | 1 | 1 | 1 | 7 | 1 | 1
 9 | 1 | 0 | 1 | 1 | 1 | 5 | 1 | 2
 7 | 1 | 1 | 1 | 1 | 1 | 5 | 1 | 2
 5 | 1 | 2 | 1 | 1 | 1 | 5 | 1 | 2
 3 | 1 | 0 | 1 | 1 | 1 | 5 | 1 | 2
 1 | 1 | 1 | 1 | 1 | 1 | 5 | 1 | 2
 9 | 1 | 0 | 1 | 1 | 1 | 3 | 1 | 0
 7 | 1 | 1 | 1 | 1 | 1 | 3 | 1 | 0
 5 | 1 | 2 | 1 | 1 | 1 | 3 | 1 | 0
 3 | 1 | 0 | 1 | 1 | 1 | 3 | 1 | 0
 1 | 1 | 1 | 1 | 1 | 1 | 3 | 1 | 0
 9 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1
 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1
 5 | 1 | 2 | 1 | 1 | 1 | 1 | 1 | 1
 3 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1
 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1
(25 rows)

with x as (select * from orca.rcte where a < 10) select * from x x2 where x2.b < (select avg(b) from x x1);
 a | b | c 
---+---+---
 2 | 0 | 2
 4 | 0 | 1
 6 | 0 | 0
 8 | 0 | 2
(4 rows)

with x as (select r.a from orca.r, orca.s  where r.a < 10 and s.d < 10 and r.a = s.d) select * from x x1, x x2;
 a | a 
---+---
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
(225 rows)

with x as (select r.a from orca.r, orca.s  where r.a < 10 and s.c < 10 and r.a = s.c) select * from x x1, x x2;
 a | a 
---+---
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 3 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 5 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 4 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 6 | 2
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 1 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 3 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 5 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 2 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 4 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 6 | 4
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 1 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 3 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 5 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 2 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 4 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 6 | 6
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 3 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 5 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 2 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 4 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 6 | 1
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 1 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 3 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 5 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 2 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 4 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 6 | 3
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 1 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 3 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 5 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 2 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 4 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
 6 | 5
(676 rows)

with x as (select * from orca.rcte where a < 10) (select a from x x2) union all (select max(a) from x x1);	
 a 
---
 2
 4
 6
 8
 1
 3
 5
 7
 9
 9
(10 rows)

with x as (select * from orca.r) select * from x order by a;	
 a  | b 
----+---
  1 | 1
  2 | 2
  3 | 0
  4 | 1
  5 | 2
  6 | 0
  7 | 1
  8 | 2
  9 | 0
 10 | 1
 11 | 2
 12 | 0
 13 | 1
 14 | 2
 15 | 0
 16 | 1
 17 | 2
 18 | 0
 19 | 1
 20 | 2
    | 1
(21 rows)

-- with x as (select * from orca.rcte where a < 10) select * from x x1, x x2 where x2.a = x1.b limit 1;
----------------------------------------------------------------------
-- correlated execution
select (select 1 union select 2);
ERROR:  more than one row returned by a subquery used as an expression
select (select generate_series(1,5));
ERROR:  more than one row returned by a subquery used as an expression
select (select a from orca.foo inner1 where inner1.a=outer1.a  union select b from orca.foo inner2 where inner2.b=outer1.b) from orca.foo outer1;
ERROR:  more than one row returned by a subquery used as an expression  (seg1 slice3 solimm1-mbp:40001 pid=7813)
select (select generate_series(1,1)) as series;
 series 
--------
      1
(1 row)

select generate_series(1,5);
 generate_series 
-----------------
               1
               2
               3
               4
               5
(5 rows)

select a, c from orca.r, orca.s where a = any (select c) order by a, c limit 10;
 a | c 
---+---
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
(10 rows)

select a, c from orca.r, orca.s where a = (select c) order by a, c limit 10;
 a | c 
---+---
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
(10 rows)

select a, c from orca.r, orca.s where a  not in  (select c) order by a, c limit 10;
 a | c 
---+---
 1 | 0
 1 | 0
 1 | 0
 1 | 0
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 3
(10 rows)

select a, c from orca.r, orca.s where a  = any  (select c from orca.r) order by a, c limit 10;
 a | c 
---+---
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 1 | 1
 2 | 2
 2 | 2
 2 | 2
 2 | 2
 2 | 2
(10 rows)

select a, c from orca.r, orca.s where a  <> all (select c) order by a, c limit 10;
 a | c 
---+---
 1 | 0
 1 | 0
 1 | 0
 1 | 0
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 2
 1 | 3
(10 rows)

select a, (select (select (select c from orca.s where a=c group by c))) as subq from orca.r order by a;
 a  | subq 
----+------
  1 |    1
  2 |    2
  3 |    3
  4 |    4
  5 |    5
  6 |    6
  7 |     
  8 |     
  9 |     
 10 |     
 11 |     
 12 |     
 13 |     
 14 |     
 15 |     
 16 |     
 17 |     
 18 |     
 19 |     
 20 |     
    |     
(21 rows)

----------------------------------------------------------------------
set optimizer=off;
CREATE TABLE orca.onek (
unique1 int4,
unique2 int4,
two int4,
four int4,
ten int4,
twenty int4,
hundred int4,
thousand int4,
twothousand int4,
fivethous int4,
tenthous int4,
odd int4,
even int4,
stringu1 name,
stringu2 name,
string4 name
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.onek values (931,1,1,3,1,11,1,31,131,431,931,2,3,'VJAAAA','BAAAAA','HHHHxx');
insert into orca.onek values (714,2,0,2,4,14,4,14,114,214,714,8,9,'MBAAAA','CAAAAA','OOOOxx');
insert into orca.onek values (711,3,1,3,1,11,1,11,111,211,711,2,3,'JBAAAA','DAAAAA','VVVVxx');
insert into orca.onek values (883,4,1,3,3,3,3,83,83,383,883,6,7,'ZHAAAA','EAAAAA','AAAAxx');
insert into orca.onek values (439,5,1,3,9,19,9,39,39,439,439,18,19,'XQAAAA','FAAAAA','HHHHxx');
insert into orca.onek values (670,6,0,2,0,10,0,70,70,170,670,0,1,'UZAAAA','GAAAAA','OOOOxx');
insert into orca.onek values (543,7,1,3,3,3,3,43,143,43,543,6,7,'XUAAAA','HAAAAA','VVVVxx');
set optimizer=on;
----------------------------------------------------------------------
select ten, sum(distinct four) from orca.onek a
group by ten 
having exists (select 1 from orca.onek b where sum(distinct a.four) = b.four);
 ten | sum 
-----+-----
   0 |   2
   4 |   2
   1 |   3
   3 |   3
   9 |   3
(5 rows)

-- indexes on partitioned tables
create table orca.pp(a int) partition by range(a)(partition pp1 start(1) end(10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "pp_1_prt_pp1" for table "pp"
create index pp_a on orca.pp(a);
NOTICE:  building index for child partition "pp_1_prt_pp1"
----------------------------------------------------------------------
-- list partition tests
-- test homogeneous partitions
drop table if exists orca.t;
NOTICE:  table "t" does not exist, skipping
create table orca.t ( a int, b char(2), to_be_drop int, c int, d char(2), e int)
distributed by (a)
partition by list(d) (partition part1 values('a'), partition part2 values('b'));
NOTICE:  CREATE TABLE will create partition "t_1_prt_part1" for table "t"
NOTICE:  CREATE TABLE will create partition "t_1_prt_part2" for table "t"
insert into orca.t
        select i, i::char(2), i, i, case when i%2 = 0 then 'a' else 'b' end, i
        from generate_series(1,100) i;
select * from orca.t order by 1, 2, 3, 4, 5, 6 limit 4;
 a | b  | to_be_drop | c | d  | e
---+----+------------+---+----+---
 1 | 1  |          1 | 1 | b  | 1
 2 | 2  |          2 | 2 | a  | 2
 3 | 3  |          3 | 3 | b  | 3
 4 | 4  |          4 | 4 | a  | 4
(4 rows)

alter table orca.t drop column to_be_drop;
select * from orca.t order by 1, 2, 3, 4, 5 limit 4;
 a | b  | c | d  | e
---+----+---+----+---
 1 | 1  | 1 | b  | 1
 2 | 2  | 2 | a  | 2
 3 | 3  | 3 | b  | 3
 4 | 4  | 4 | a  | 4
(4 rows)

insert into orca.t (d, a) values('a', 0);
insert into orca.t (a, d) values(0, 'b');
select * from orca.t order by 1, 2, 3, 4, 5 limit 4;
 a | b  | c | d  | e
---+----+---+----+---
 0 |    |   | a  |
 0 |    |   | b  |
 1 | 1  | 1 | b  | 1
 2 | 2  | 2 | a  | 2
(4 rows)

create table orca.multilevel_p (a int, b int)
partition by range(a)
subpartition by range(a)
subpartition template
(
subpartition sp1 start(0) end(10) every (5),
subpartition sp2 start(10) end(200) every(50)
)
(partition aa start(0) end (100) every (50),
partition bb start(100) end(200) every (50) );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1" for table "multilevel_p"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2" for table "multilevel_p"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1" for table "multilevel_p"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2" for table "multilevel_p"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp1_1" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp1_2" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp2_1" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp2_2" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp2_3" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_1_2_prt_sp2_4" for table "multilevel_p_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp1_1" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp1_2" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp2_1" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp2_2" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp2_3" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_aa_2_2_prt_sp2_4" for table "multilevel_p_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp1_1" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp1_2" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp2_1" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp2_2" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp2_3" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_1_2_prt_sp2_4" for table "multilevel_p_1_prt_bb_1"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp1_1" for table "multilevel_p_1_prt_bb_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp1_2" for table "multilevel_p_1_prt_bb_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp2_1" for table "multilevel_p_1_prt_bb_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp2_2" for table "multilevel_p_1_prt_bb_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp2_3" for table "multilevel_p_1_prt_bb_2"
NOTICE:  CREATE TABLE will create partition "multilevel_p_1_prt_bb_2_2_prt_sp2_4" for table "multilevel_p_1_prt_bb_2"
insert into orca.multilevel_p values (1,1), (100,200);
select * from orca.multilevel_p;
  a  |  b  
-----+-----
 100 | 200
   1 |   1
(2 rows)

-- test appendonly
drop table if exists orca.t;
create table orca.t ( a int, b char(2), to_be_drop int, c int, d char(2), e int)
distributed by (a)
partition by list(d) (partition part1 values('a') with (appendonly=true, compresslevel=5, orientation=column), partition part2 values('b') with (appendonly=true, compresslevel=5, orientation=column));
NOTICE:  CREATE TABLE will create partition "t_1_prt_part1" for table "t"
NOTICE:  CREATE TABLE will create partition "t_1_prt_part2" for table "t"
insert into orca.t
        select i, i::char(2), i, i, case when i%2 = 0 then 'a' else 'b' end, i
        from generate_series(1,100) i;
select * from orca.t order by 1, 2, 3, 4, 5, 6 limit 4;
 a | b  | to_be_drop | c | d  | e
---+----+------------+---+----+---
 1 | 1  |          1 | 1 | b  | 1
 2 | 2  |          2 | 2 | a  | 2
 3 | 3  |          3 | 3 | b  | 3
 4 | 4  |          4 | 4 | a  | 4
(4 rows)

alter table orca.t drop column to_be_drop;
select * from orca.t order by 1, 2, 3, 4, 5 limit 4;
 a | b  | c | d  | e
---+----+---+----+---
 1 | 1  | 1 | b  | 1
 2 | 2  | 2 | a  | 2
 3 | 3  | 3 | b  | 3
 4 | 4  | 4 | a  | 4
(4 rows)

insert into orca.t
        select i, i::char(2), i, case when i%2 = 0 then 'a' else 'b' end, i
        from generate_series(1,100) i;
select * from orca.t order by 1, 2, 3, 4, 5 limit 4;
 a | b  | c | d  | e
---+----+---+----+---
 1 | 1  | 1 | b  | 1
 1 | 1  | 1 | b  | 1
 2 | 2  | 2 | a  | 2
 2 | 2  | 2 | a  | 2
(4 rows)

-- test heterogeneous partitions
drop table if exists orca.t;
create table orca.t ( timest character varying(6), user_id numeric(16,0) not null, to_be_drop char(5), tag1 char(5), tag2 char(5))
distributed by (user_id)
partition by list (timest) (partition part201203 values('201203') with (appendonly=true, compresslevel=5, orientation=column), partition part201204 values('201204') with (appendonly=true, compresslevel=5, orientation=row), partition part201205 values('201205'));
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201203" for table "t"
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201204" for table "t"
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201205" for table "t"
insert into orca.t values('201203',0,'drop', 'tag1','tag2');
alter table orca.t drop column to_be_drop;
alter table orca.t add partition part201206 values('201206') with (appendonly=true, compresslevel=5, orientation=column);
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201206" for table "t"
alter table orca.t add partition part201207 values('201207') with (appendonly=true, compresslevel=5, orientation=row);
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201207" for table "t"
alter table orca.t add partition part201208 values('201208');
NOTICE:  CREATE TABLE will create partition "t_1_prt_part201208" for table "t"
insert into orca.t values('201203',1,'tag1','tag2');
insert into orca.t values('201204',2,'tag1','tag2');
insert into orca.t values('201205',1,'tag1','tag2');
insert into orca.t values('201206',2,'tag1','tag2');
insert into orca.t values('201207',1,'tag1','tag2');
insert into orca.t values('201208',2,'tag1','tag2');
-- test projections
select * from orca.t order by 1,2;
 timest | user_id | tag1  | tag2
--------+---------+-------+-------
 201203 |       0 | tag1  | tag2
 201203 |       1 | tag1  | tag2
 201204 |       2 | tag1  | tag2
 201205 |       1 | tag1  | tag2
 201206 |       2 | tag1  | tag2
 201207 |       1 | tag1  | tag2
 201208 |       2 | tag1  | tag2
(7 rows)

select tag2, tag1 from orca.t order by 1, 2;;
 tag2  | tag1
-------+-------
 tag2  | tag1
 tag2  | tag1
 tag2  | tag1
 tag2  | tag1
 tag2  | tag1
 tag2  | tag1
 tag2  | tag1
(7 rows)

select tag1, user_id from orca.t order by 1, 2;
 tag1  | user_id
-------+---------
 tag1  |       0
 tag1  |       1
 tag1  |       1
 tag1  |       1
 tag1  |       2
 tag1  |       2
 tag1  |       2
(7 rows)

insert into orca.t(user_id, timest, tag2) values(3, '201208','tag2');
select * from orca.t order by 1, 2;
 timest | user_id | tag1  | tag2
--------+---------+-------+-------
 201203 |       0 | tag1  | tag2
 201203 |       1 | tag1  | tag2
 201204 |       2 | tag1  | tag2
 201205 |       1 | tag1  | tag2
 201206 |       2 | tag1  | tag2
 201207 |       1 | tag1  | tag2
 201208 |       2 | tag1  | tag2
 201208 |       3 |       | tag2
(8 rows)

-- test project elements in TVF
CREATE FUNCTION orca.csq_f(a int) RETURNS int AS $$ select $1 $$ LANGUAGE SQL;
CREATE TABLE orca.csq_r(a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO orca.csq_r VALUES (1);
SELECT * FROM orca.csq_r WHERE a IN (SELECT * FROM orca.csq_f(orca.csq_r.a));
 a 
---
 1
(1 row)

-- test algebrization of having clause
drop table if exists orca.tab1;
NOTICE:  table "tab1" does not exist, skipping
create table orca.tab1(a int, b int, c int, d int, e int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.tab1 values (1,2,3,4,5);
insert into orca.tab1 values (1,2,3,4,5);
insert into orca.tab1 values (1,2,3,4,5);
select b,d from orca.tab1 group by b,d having min(distinct d)>3;
 b | d 
---+---
 2 | 4
(1 row)

select b,d from orca.tab1 group by b,d having d>3;
 b | d 
---+---
 2 | 4
(1 row)
 
select b,d from orca.tab1 group by b,d having min(distinct d)>b;
 b | d 
---+---
 2 | 4
(1 row)

create table orca.fooh1 (a int, b int, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table orca.fooh2 (a int, b int, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.fooh1 select i%4, i%3, i from generate_series(1,20) i;
insert into orca.fooh2 select i%3, i%2, i from generate_series(1,20) i;
select sum(f1.b) from orca.fooh1 f1 group by f1.a;
 sum 
-----
   4
   6
   5
   6
(4 rows)

select 1 as one, f1.a from orca.fooh1 f1 group by f1.a having sum(f1.b) > 4;
 one | a 
-----+---
   1 | 1
   1 | 2
   1 | 0
(3 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 10 > (select f2.a from orca.fooh2 f2 group by f2.a having sum(f1.a) > count(*) order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
 2 |   1
 3 |   1
(2 rows)

select 1 from orca.fooh1 f1 group by f1.a having 10 > (select f2.a from orca.fooh2 f2 group by f2.a having sum(f1.a) > count(*) order by f2.a limit 1) order by f1.a;
 ?column? 
----------
        1
        1
(2 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 10 > (select 1 from orca.fooh2 f2 group by f2.a having sum(f1.b) > count(*) order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
(0 rows)

select 1 from orca.fooh1 f1 group by f1.a having 10 > (select 1 from orca.fooh2 f2 group by f2.a having sum(f1.b) > count(*) order by f2.a limit 1) order by f1.a;
 ?column? 
----------
(0 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 0 = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b) > 1 order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
 0 |   1
 1 |   1
 2 |   1
 3 |   1
(4 rows)

select 1 as one from orca.fooh1 f1 group by f1.a having 0 = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b) > 1 order by f2.a limit 1) order by f1.a;
 one 
-----
   1
   1
   1
   1
(4 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 0 = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b) > 1 order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
 0 |   1
 1 |   1
 2 |   1
 3 |   1
(4 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 0 = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b + f1.a) > 1 order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
 0 |   1
 1 |   1
 2 |   1
 3 |   1
(4 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having 0 = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b + sum(f1.b)) > 1 order by f2.a limit 1) order by f1.a;
 a | one 
---+-----
 0 |   1
 1 |   1
 2 |   1
 3 |   1
(4 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having f1.a < (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b + 1) > f1.a order by f2.a desc limit 1) order by f1.a;
 a | one 
---+-----
 0 |   1
 1 |   1
(2 rows)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having f1.a = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b) + 1 > f1.a order by f2.a desc limit 1);
 a | one 
---+-----
 2 |   1
(1 row)

select f1.a, 1 as one from orca.fooh1 f1 group by f1.a having f1.a = (select f2.a from orca.fooh2 f2 group by f2.a having sum(f2.b) > 1 order by f2.a limit 1);
 a | one 
---+-----
 0 |   1
(1 row)

select sum(f1.a+1)+1 from orca.fooh1 f1 group by f1.a+1;
 ?column? 
----------
       16
        6
       11
       21
(4 rows)

select sum(f1.a+1)+sum(f1.a+1) from orca.fooh1 f1 group by f1.a+1;
 ?column? 
----------
       20
       40
       30
       10
(4 rows)

select sum(f1.a+1)+avg(f1.a+1), sum(f1.a), sum(f1.a+1) from orca.fooh1 f1 group by f1.a+1;
 ?column? | sum | sum 
----------+-----+-----
        6 |   0 |   5
       18 |  10 |  15
       12 |   5 |  10
       24 |  15 |  20
(4 rows)

create table orca.t77(C952 text) WITH (compresstype=zlib,compresslevel=2,appendonly=true,blocksize=393216,checksum=true);
insert into orca.t77 select 'text'::text;
insert into orca.t77 select 'mine'::text;
insert into orca.t77 select 'apple'::text;
insert into orca.t77 select 'orange'::text;
SELECT to_char(AVG( char_length(DT466.C952) ), '9999999.9999999'), MAX( char_length(DT466.C952) ) FROM orca.t77 DT466 GROUP BY char_length(DT466.C952);
     to_char      | max 
------------------+-----
        5.0000000 |   5
        4.0000000 |   4
        6.0000000 |   6
(3 rows)

create table orca.prod9 (sale integer, prodnm varchar,price integer);
insert into orca.prod9 values (100, 'shirts', 500);
insert into orca.prod9 values (200, 'pants',800);
insert into orca.prod9 values (300, 't-shirts', 300);
-- returning product and price using Havingand Group by clause
select prodnm, price from orca.prod9 GROUP BY prodnm, price HAVING price !=300;
 prodnm | price 
--------+-------
 pants  |   800
 shirts |   500
(2 rows)

-- analyze on tables with dropped attributes
create table orca.toanalyze(a int, b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into orca.toanalyze values (1,1), (2,2), (3,3);
alter table orca.toanalyze drop column a;
NOTICE:  Dropping a column that is part of the distribution policy forces a NULL distribution policy
analyze orca.toanalyze;
-- union 
create table orca.ur (a int, b int);
create table orca.us (c int, d int);
create table orca.ut(a int);
create table orca.uu(c int, d bigint);
insert into orca.ur values (1,1);
insert into orca.ur values (1,2);
insert into orca.ur values (2,1);
insert into orca.us values (1,3);
insert into orca.ut values (3);
insert into orca.uu values (1,3);
select * from (select a, a from orca.ur union select c, d from orca.us) x(g,h);
 g | h 
---+---
 2 | 2
 1 | 1
 1 | 3
(3 rows)

select * from (select a, a from orca.ur union select c, d from orca.us) x(g,h), orca.ut t where t.a = x.h;
 g | h | a 
---+---+---
 1 | 3 | 3
(1 row)

select * from (select a, a from orca.ur union select c, d from orca.uu) x(g,h), orca.ut t where t.a = x.h;
 g | h | a 
---+---+---
 1 | 3 | 3
(1 row)

select 1 AS two UNION select 2.2;
 two 
-----
   1
 2.2
(2 rows)

select 2.2 AS two UNION select 1;
 two 
-----
   1
 2.2
(2 rows)

select * from (select 2.2 AS two UNION select 1) x(a), (select 1.0 AS two UNION ALL select 1) y(a) where y.a = x.a;
 a |  a  
---+-----
 1 | 1.0
 1 |   1
(2 rows)

-- window functions inside inline CTE
CREATE TABLE orca.twf1 AS SELECT i as a, i+1 as b from generate_series(1,10)i;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE orca.twf2 AS SELECT i as c, i+1 as d from generate_series(1,10)i;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SET optimizer_cte_inlining_bound=1000;
SET optimizer_cte_inlining = on;
WITH CTE(a,b) AS
(SELECT a,d FROM orca.twf1, orca.twf2 WHERE a = d),
CTE1(e,f) AS
( SELECT f1.a, rank() OVER (PARTITION BY f1.b ORDER BY CTE.a) FROM orca.twf1 f1, CTE )
SELECT * FROM CTE1,CTE WHERE CTE.a = CTE1.f and CTE.a = 2 ORDER BY 1;
 e  | f | a | b 
----+---+---+---
  1 | 2 | 2 | 2
  2 | 2 | 2 | 2
  3 | 2 | 2 | 2
  4 | 2 | 2 | 2
  5 | 2 | 2 | 2
  6 | 2 | 2 | 2
  7 | 2 | 2 | 2
  8 | 2 | 2 | 2
  9 | 2 | 2 | 2
 10 | 2 | 2 | 2
(10 rows)

SET optimizer_cte_inlining = off;
-- catalog queries
select 1 from pg_class c group by c.oid limit 1;
 ?column? 
----------
        1
(1 row)

-- CSQs
drop table if exists orca.tab1;
drop table if exists orca.tab2;
NOTICE:  table "tab2" does not exist, skipping
create table orca.tab1 (i, j) as select i,i%2 from generate_series(1,10) i;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table orca.tab2 (a, b) as select 1, 2;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select * from orca.tab1 where 0 < (select count(*) from generate_series(1,i)) order by 1;
 i  | j 
----+---
  1 | 1
  2 | 0
  3 | 1
  4 | 0
  5 | 1
  6 | 0
  7 | 1
  8 | 0
  9 | 1
 10 | 0
(10 rows)

select * from orca.tab1 where i > (select b from orca.tab2);
 i  | j 
----+---
  4 | 0
  6 | 0
  8 | 0
 10 | 0
  3 | 1
  5 | 1
  7 | 1
  9 | 1
(8 rows)

-- subqueries
select NULL in (select 1);
 ?column? 
----------
 
(1 row)

select 1 in (select 1);
 ?column? 
----------
 t
(1 row)

select 1 in (select 2);
 ?column? 
----------
 f
(1 row)

select NULL in (select 1/0);
ERROR:  division by zero
-- clean up
drop schema orca cascade;
NOTICE:  drop cascades to table orca.tab2
NOTICE:  drop cascades to table orca.tab1
NOTICE:  drop cascades to table orca.twf2
NOTICE:  drop cascades to table orca.twf1
NOTICE:  drop cascades to table orca.uu
NOTICE:  drop cascades to table orca.ut
NOTICE:  drop cascades to table orca.us
NOTICE:  drop cascades to table orca.ur
NOTICE:  drop cascades to table orca.toanalyze
NOTICE:  drop cascades to table orca.prod9
NOTICE:  drop cascades to append only table orca.t77
NOTICE:  drop cascades to table orca.fooh2
NOTICE:  drop cascades to table orca.fooh1
NOTICE:  drop cascades to table orca.tab1
NOTICE:  drop cascades to table orca.csq_r
NOTICE:  drop cascades to function orca.csq_f(integer)
NOTICE:  drop cascades to table orca.t_1_prt_part201208
NOTICE:  drop cascades to constraint t_1_prt_part201208_check on table orca.t_1_prt_part201208
NOTICE:  drop cascades to append only table orca.t_1_prt_part201207
NOTICE:  drop cascades to constraint t_1_prt_part201207_check on append only table orca.t_1_prt_part201207
NOTICE:  drop cascades to append only columnar table orca.t_1_prt_part201206
NOTICE:  drop cascades to constraint t_1_prt_part201206_check on append only columnar table orca.t_1_prt_part201206
NOTICE:  drop cascades to table orca.t_1_prt_part201205
NOTICE:  drop cascades to constraint t_1_prt_part201205_check on table orca.t_1_prt_part201205
NOTICE:  drop cascades to append only table orca.t_1_prt_part201204
NOTICE:  drop cascades to constraint t_1_prt_part201204_check on append only table orca.t_1_prt_part201204
NOTICE:  drop cascades to append only columnar table orca.t_1_prt_part201203
NOTICE:  drop cascades to constraint t_1_prt_part201203_check on append only columnar table orca.t_1_prt_part201203
NOTICE:  drop cascades to table orca.t
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp2_4_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_4
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp2_3_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_3
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp2_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp2_1_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp2_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp1_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_2_prt_sp1_1_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2_2_prt_sp1_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_2_check on table orca.multilevel_p_1_prt_bb_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp2_4_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_4
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp2_3_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_3
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp2_2_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp2_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp2_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp1_2_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_2_prt_sp1_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1_2_prt_sp1_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_bb_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_bb_1_check on table orca.multilevel_p_1_prt_bb_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp2_4_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_4
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp2_3_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_3
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp2_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp2_1_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp2_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp1_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_2_prt_sp1_1_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2_2_prt_sp1_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_2_check on table orca.multilevel_p_1_prt_aa_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp2_4_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_4
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_4
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp2_3_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_3
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_3
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp2_2_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp2_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp2_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp1_2_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_2
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_2
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_2_prt_sp1_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1_2_prt_sp1_1
NOTICE:  drop cascades to table orca.multilevel_p_1_prt_aa_1
NOTICE:  drop cascades to constraint multilevel_p_1_prt_aa_1_check on table orca.multilevel_p_1_prt_aa_1
NOTICE:  drop cascades to table orca.multilevel_p
NOTICE:  drop cascades to table orca.pp_1_prt_pp1
NOTICE:  drop cascades to constraint pp_1_prt_pp1_check on table orca.pp_1_prt_pp1
NOTICE:  drop cascades to table orca.pp
NOTICE:  drop cascades to table orca.onek
NOTICE:  drop cascades to table orca.rcte
NOTICE:  drop cascades to table orca.bar
NOTICE:  drop cascades to table orca.foo
NOTICE:  drop cascades to table orca.m1
NOTICE:  drop cascades to table orca.m
NOTICE:  drop cascades to table orca.s
NOTICE:  drop cascades to table orca.r
NOTICE:  drop cascades to table orca.bar2
NOTICE:  drop cascades to table orca.bar1
